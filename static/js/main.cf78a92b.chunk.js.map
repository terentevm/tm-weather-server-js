{"version":3,"sources":["api/index.js","Actions/LocationAction.js","Components/Location/useOutsideClick.js","PropTypes/LocationType.js","Components/Icons/Clear.js","Languages/ru.js","Languages/index.js","Languages/cs.js","Languages/de.js","Providers/LanguageProvider.js","Components/Location/Autocomplete.js","Containers/LocationLookup.js","Components/LanguageSelector/LanguageSelector.js","Containers/LangSelector.js","Components/NavBar/NavBar.jsx","Components/CurrentWeather/CurrentCard.js","Components/Icons/FavoriteIcon.js","Components/CurrentWeather/CurrentLocation.jsx","Components/CurrentWeather/CurrentInfo.js","Containers/CurrentWeather/MapConditionsToIcons.js","Components/CurrentWeather/CurrentHourly.jsx","Components/CurrentDayDuration/DayDuration.js","Actions/FaviritesActions.js","Helpers/helpers.js","Containers/CurrentWeather/CurrentContainer.js","Components/Forecast/ForecastDay.jsx","Components/Forecast/Forecast.jsx","Components/Alerts/LoadingAlert.js","Containers/WeatherLayout.js","Components/Modal/Question.js","Components/Favorites/Favorites.js","App.js","serviceWorker.js","Reducers/InitialStates/weather.js","Reducers/WeatherReducer.js","Reducers/FavoritesReducer.js","Reducers/index.js","index.js","assets/svg/overcast-and-snow.svg","assets/svg/partly-cloudy-and-light-rain.svg","assets/svg/partly-cloudy-and-rain.svg","assets/svg/overcast-and-rain.svg","assets/svg/partly-cloudy-and-light-snow.svg","assets/icons/bookmark.svg","assets/icons/update.svg","assets/svg/wind.svg","assets/svg/humidity.svg","assets/svg/pressure_light.svg","assets/svg/clear.svg","assets/svg/partly-cloudy.svg","assets/svg/cloudy.svg","assets/svg/overcast.svg","assets/svg/overcast-thunderstorms-with-rain.svg","assets/svg/overcast-and-wet-snow.svg","assets/svg/haze.svg","assets/svg/tornado.svg","assets/icons/sun.svg","assets/icons/moon.svg"],"names":["connection","Connection","this","host","search","axios","get","trim","res","status","data","Array","query","params","lat","lon","limit","Object","prototype","hasOwnProperty","call","options","getConn","PROCESSING_REQUEST","REQUEST_LOCATIONS_FAILED","SET_LOCATION","SET_FORECAST_INFO","CompleteRequestLocations","payload","type","cleanLocations","dispatch","setCurrentLocation","location","setForecasts","conn","console","log","dir","getForecast","then","catch","err","useOutsideClick","PropTypes","string","isRequired","number","ref","callback","handleClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","xmlns","width","height","viewBox","className","d","fill","ru","title","placeholder","loadingPlaceholder","locale","localeRu","weatherDic","today","temp","feelsLike","pressure","wind","humidity","wind_um","pressure_um","uvi","time","h","m","min","dayParts","morning","day","evening","night","dayDuration","duration","sunrise","sunset","forecast","dictionaryList","cs","localeCZ","de","localeDe","languageOptions","id","text","LanguageContext","createContext","language","window","userLang","localStorage","getItem","navigator","slice","find","item","getUserLanguage","dictionary","initContext","LanguageProvider","props","languageContext","useContext","useState","setLanguage","setDictionary","provider","selectedLanguage","setItem","storeUserLang","Provider","value","children","Autocomplete","searchOnInput","searchOnClear","onSelect","locations","setSearch","showDropdown","setShowDropdown","useRef","showList","length","ListItems","map","key","onClick","stopPropagation","data-testid","name","role","onChange","inputOnChange","onFocus","Clear","LocationLookup","newValue","setState","findLocation","listOnSelect","history","push","state","locationList","React","Component","connect","weather","withRouter","items","onClickHandler","Item","bind","DropdownItems","LangSelector","LanguageSelector","favoritesCount","favorites","all","to","src","BookmarkIcon","alt","condClassName","cardClassName","isFavorite","ProcessingIcon","processing","IconUpdate","dateinfo","addToFavorite","dic","dayOfWeek","dateStr","timeStr","localDate","offsetMin","Date","addSec","getTimezoneOffset","addSeconds","getLocationDateTime","offset","format","country","fact","cond","condition","Math","round","icon","feels_like","windIcon","wind_speed","humidityIcon","pressureIcon","pressure_mm","conditionsToIcons","Map","set","ClearIcon","en","getClassName","daytime","PartlyCloudy","Cloudy","Overcast","PartlyCloudyLightRain","PartlyCloudyRain","OvercastRain","OvercastThunderstormsRain","OvercastWetSnow","PartlyCloudyLightSnow","OvercastSnow","Haze","Tornado","ForecastHour","MapConditions","hour","CurrentHourly","hourly","Arrow","ArrowLeft","ArrowRight","cnt","forecastList","style","wheel","transition","translate","alignCenter","clickWhenDrag","dragging","hideArrows","hideSingleArrow","scrollBy","arrowLeft","arrowRight","DayDuration","sunrise_hh_mm","sunset_hh_mm","day_duration","durationTemplate","sunriseParts","split","sunsetParts","hours","differenceInMinutes","parseInt","SunIcon","MoonIcon","getIcon","lang","cardBody","ADD_LOCATION_TO_FAVORITES","REMOVE_LOCATION_FROM_FAVORITES","favIndex","findIndex","loc","region","CurrentContainer","useDispatch","useSelector","currentHourly","shallowEqual","day_part","CurrentCard","CurrentLocation","addLocationToFavorites","CurrentInfo","Duration","ForecastDay","fcDate","fromUnixTime","dt","charAt","toUpperCase","dayFormated","wrapperClassName","temp_max","getClassNameByTemp","temp_min","forecasts","message","WeatherLayout","LoadingAlert","Question","showModal","qParams","onYes","onCancel","modalClassName","display","data-backdrop","tabIndex","aria-labelledby","aria-hidden","show","setShow","subj","setQParams","destroyDialogRemove","removeOnYes","q","startDialogRemove","warningNoFavorites","App","getCurrentInfo","locInfo","exact","path","component","Favorites","Boolean","hostname","match","coordinates","localeOptions","info","fcSelected","initialState","action","daily","rootReducer","combineReducers","ind","store","createStore","composeWithDevTools","applyMiddleware","thunk","render","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.cf78a92b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nlet connection = null;\r\n\r\nclass Connection {\r\n  constructor() {\r\n    //this.host = 'https://tm-weather-js-api.herokuapp.com/';\r\n    this.host = 'https://tm-weather-js-api.herokuapp.com';\r\n    //this.host = \"http://localhost:9000\";\r\n  }\r\n\r\n  async findLocation(search) {\r\n    try {\r\n      const res = await axios.get(`${this.host}/api/autocomplete/?q=${search.trim()}`);\r\n\r\n      if (res.status === 200 && res.data instanceof Array) {\r\n        return res.data;\r\n      }\r\n\r\n      return [];\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  async getForecast(query) {\r\n    try {\r\n      const res = await axios.get(`${this.host}/api/forecast/`, {\r\n        params: {\r\n          lat: query.lat,\r\n          lon: query.lon,\r\n          limit: query.limit,\r\n        },\r\n      });\r\n\r\n      if (Object.prototype.hasOwnProperty.call(res.data, 'current')) {\r\n        return res.data;\r\n      }\r\n\r\n      return [];\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  async getCurrentInfo(query) {\r\n    const options = {};\r\n\r\n    if (query instanceof Object) {\r\n      options.params = query;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get(`${this.host}/api/current/`, options);\r\n\r\n      if (res.status === 200) {\r\n        return res.data;\r\n      }\r\n      \r\n      return [];\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n\r\nexport default function getConn() {\r\n  if (connection === null) {\r\n    connection = new Connection();\r\n  }\r\n\r\n  return connection;\r\n}\r\n","import getConn from '../api';\r\n\r\nexport const PROCESSING_REQUEST = 'PROCESSING_REQUEST';\r\nexport const START_REQUEST_LOCATIONS = 'START_REQUEST_LOCATIONS';\r\nexport const REQUEST_LOCATIONS_SUCCESS = 'REQUEST_LOCATIONS_SUCCESS';\r\nexport const REQUEST_LOCATIONS_FAILED = 'REQUEST_LOCATIONS_FAILED';\r\nexport const SET_COORDINATES = 'SET_COORDINATES';\r\nexport const SET_LOCATION = 'SET_LOCATION';\r\nexport const SET_FORECAST_INFO = 'SET_FORECAST_INFO';\r\n\r\nexport const CompleteRequestLocations = (payload) => ({\r\n  type: REQUEST_LOCATIONS_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport function cleanLocations() {\r\n  return function (dispatch) {\r\n    dispatch(CompleteRequestLocations([]));\r\n  };\r\n}\r\n\r\nexport function setCurrentLocationByIP() {\r\n  return function (dispatch) {\r\n    const conn = getConn();\r\n    \r\n    return conn.getCurrentInfo()\r\n      .then((locInfo) => {\r\n        dispatch(setForecasts(locInfo));\r\n\r\n        dispatch({\r\n          type: SET_LOCATION,\r\n          payload: locInfo,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function setCurrentLocation(location) {\r\n  return function (dispatch) {\r\n    dispatch({\r\n      type: SET_LOCATION,\r\n      payload: location,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setForecasts(location) {\r\n  return function (dispatch) {\r\n    const conn = getConn();\r\n\r\n    dispatch({ type: PROCESSING_REQUEST });\r\n    console.log('msg from setForecasts func');\r\n    console.dir(location);\r\n\r\n    return conn.getForecast({\r\n      lat: location.lat,\r\n      lon: location.lon,\r\n      limit: 7,\r\n    }).then((data) => {\r\n\r\n      dispatch({\r\n        type: SET_FORECAST_INFO,\r\n        payload: data,\r\n      });\r\n    }).catch((err) => {\r\n\r\n    });\r\n  };\r\n}\r\n\r\nexport function findLocation(search) {\r\n  return function (dispatch) {\r\n    const conn = getConn();\r\n\r\n    return conn.findLocation(search)\r\n      .then((data) => {\r\n        console.dir(data);\r\n        dispatch(CompleteRequestLocations(data));\r\n      })\r\n      .catch(() => {\r\n        console.dir('error');\r\n        dispatch({ type: REQUEST_LOCATIONS_FAILED, payload: [] });\r\n      });\r\n  };\r\n}","import { useEffect } from 'react';\r\n\r\nconst useOutsideClick = (ref, callback) => {\r\n  const handleClick = e => {\r\n    if (ref.current && !ref.current.contains(e.target)) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useOutsideClick;\r\n","import PropTypes from 'prop-types';\r\nexport default {\r\n\tname: PropTypes.string.isRequired,\r\n\tcountry: PropTypes.string.isRequired,\r\n\tregion: PropTypes.string.isRequired,\r\n\tlat: PropTypes.number.isRequired,\r\n\tlon: PropTypes.number.isRequired,\r\n\ttimezone_id: PropTypes.string,\r\n\tlocaltime: PropTypes.string,\r\n\tlocaltime_epoch: PropTypes.number,\r\n\tutc_offset: PropTypes.string,\r\n};\r\n","import React from 'react';\r\n\r\nexport default function () {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"autocomplete_input_btn_icon\">\r\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n}\r\n","import localeRu from 'date-fns/locale/ru';\n\nconst ru = {\n  title: 'Погода',\n  search: {\n    placeholder: 'Город',\n    loadingPlaceholder: 'Данные загружаются...'\n  },\n  locale: localeRu,\n  weatherDic: {\n    today: 'Сегодня',\n    temp: 'Температура',\n    feelsLike: 'Ощущается как',\n    pressure: 'Давление',\n    wind: 'Ветер',\n    humidity: 'Влажность',\n    wind_um: 'м/сек',\n    pressure_um: 'мм',\n    uvi: 'УФ'\n  },\n  time: {\n    h: 'ч',\n    m: 'м',\n    min: 'мин'\n  },\n  dayParts: {\n    morning: 'Утро',\n    day: 'День',\n    evening: 'Вечер',\n    night: 'Ночь'\n  },\n  dayDuration: {\n    duration: 'Длина дня',\n    sunrise: 'Восход',\n    sunset: 'Закат'\n  },\n  forecast: {\n    title: 'Прогноз на 7 дней'\n  }\n\n};\n\nexport default ru;","import ru from './ru';\nimport cs from './cs';\nimport de from './de';\n\nexport const dictionaryList = {\n  ru,\n  cs,\n  de,\n};\n\nexport const languageOptions = [\n  { id: 'ru', text: 'Русский' },\n  { id: 'cs', text: 'čeština'},\n  { id: 'de', text: 'Deutsch'},\n];","import localeCZ from 'date-fns/locale/cs';\n\nconst cs = {\n  title: 'Počasí',\n  search: {\n    placeholder: 'Město',\n    loadingPlaceholder: 'Data se načítají...'\n  },\n  locale: localeCZ,\n  weatherDic: {\n    today: 'Dnes',\n    temp: 'Teplota',\n    feelsLike: 'Pocitově',\n    pressure: 'Tlak',\n    wind: 'Vítr',\n    humidity: 'Vlhkost',\n    wind_um: 'm/sec',\n    pressure_um: 'mm',\n    uvi: 'uvi'\n  },\n  time: {\n    h: 'h',\n    m: 'm',\n    min: 'min'\n  },\n  dayParts: {\n    morning: 'Ráno',\n    day: 'Den',\n    evening: 'Večer ',\n    night: 'Noc'\n  },\n  dayDuration: {\n    duration: 'Délka dne',\n    sunrise: 'Východ slunce',\n    sunset: 'Západ slunce'\n  },\n  forecast: {\n    title: 'Předpověď na 7 dny'\n  }\n\n};\n\nexport default cs;","import localeDe from 'date-fns/locale/de';\n\nconst de = {\n  title: 'Das Wetter',\n  search: {\n    placeholder: 'Stadt',\n    loadingPlaceholder: 'Daten werden geladen...'\n  },\n  locale: localeDe,\n  weatherDic: {\n    today: 'Heute',\n    temp: 'Temperatur',\n    feelsLike: 'Lust haben auf',\n    pressure: 'Druck',\n    wind: 'Wind',\n    humidity: 'Feuchtigkeit',\n    wind_um: 'm/sec',\n    pressure_um: 'mm',\n    uvi: 'uvi'\n  },\n  time: {\n    h: 'uhr',\n    m: 'm',\n    min: 'min'\n  },\n  dayParts: {\n    morning: 'Morgens',\n    day: 'Morgens',\n    evening: 'Mittags',\n    night: 'Abends'\n  },\n  dayDuration: {\n    duration: 'Tageslänge',\n    sunrise: 'Sonnenaufgang',\n    sunset: 'Sonnenuntergang'\n  },\n  forecast: {\n    title: '7 Tage Vorhersage'\n  }\n\n};\n\nexport default de;","import React, { useState, createContext, useContext } from 'react';\n\nimport { languageOptions, dictionaryList } from '../Languages';\n\nfunction getUserLanguage() {\n  if (!window) {\n    return languageOptions[0];\n  }\n\n  const userLang = localStorage.getItem('lang') || navigator.language.slice(0, 2);\n\n  return languageOptions.find(item => item.id === userLang) || languageOptions[0];\n\n}\n\nfunction storeUserLang(selectedLanguage) {\n  localStorage.setItem('lang', selectedLanguage.id);\n}\n\nfunction initContext() {\n  const language = getUserLanguage();\n  const dictionary = dictionaryList[language.id];\n\n  return {language, dictionary};\n}\n// create the language context with default selected language\nexport const LanguageContext = createContext(initContext());\n\n// it provides the language context to app\nexport function LanguageProvider(props) {\n  const languageContext = useContext(LanguageContext);\n  const [language, setLanguage] = useState(languageContext.language);\n  const [dictionary, setDictionary] = useState(languageContext.dictionary);\n\n  const provider = {\n    language,\n    dictionary,\n    setLanguage: (selectedLanguage) => {\n      console.log('set lang');\n      console.dir(selectedLanguage);\n      storeUserLang(selectedLanguage);\n      setLanguage(selectedLanguage);\n      setDictionary(dictionaryList[selectedLanguage.id]);\n    }\n  };\n\n  return (\n    <LanguageContext.Provider value={provider}>\n      {props.children}\n    </LanguageContext.Provider>\n  );\n}\n\n// get text according to id & current language\nexport function Text(props) {\n  const languageContext = useContext(LanguageContext);\n\n  return languageContext.dictionary[props.tid];\n}","import React, { useRef, useState, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LocationType from '../../PropTypes/LocationType';\r\nimport useOutsideClick from './useOutsideClick';\r\nimport './Autocomplete.css';\r\nimport ClearIcon from '../Icons/Clear';\r\n\r\nimport { LanguageContext } from '../../Providers/LanguageProvider';\r\n\r\nfunction Autocomplete(props) {\r\n  const {\r\n    searchOnInput,\r\n    searchOnClear,\r\n    onSelect,\r\n    locations,\r\n  } = props;\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [showDropdown, setShowDropdown] = useState(true);\r\n  const ref = useRef();\r\n  const { dictionary } = useContext(LanguageContext);\r\n\r\n  useOutsideClick(ref, () => {\r\n    setShowDropdown(false);\r\n  });\r\n\r\n  function inputOnChange(e) {\r\n    searchOnInput(e.target.value);\r\n    setSearch(e.target.value);\r\n    setShowDropdown(true);\r\n  }\r\n\r\n  function inputOnFocus() {\r\n    if (locations.length > 0) {\r\n      setShowDropdown(true);\r\n    }\r\n  }\r\n\r\n  function iconClearOnClick() {\r\n    setSearch('');\r\n    setShowDropdown(false);\r\n    searchOnClear();\r\n  }\r\n\r\n  function handleSelect(event, location) {\r\n    event.stopPropagation();\r\n\r\n    searchOnInput('');\r\n\r\n    setSearch('');\r\n    setShowDropdown(false);\r\n\r\n    onSelect(location);\r\n  }\r\n\r\n  const showList = showDropdown === true && locations.length > 0;\r\n  const ListItems = locations.map((item, key) => (\r\n    <li\r\n      key={key}\r\n      className=\"autocomplete_dropdown_item\"\r\n      onClick={(e) => handleSelect(e, item)}\r\n      data-testid={`ac_dropdown_item_${key}`}\r\n    >\r\n      {`${item.name}`}\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      className=\"autocomplete_wrapper\"\r\n      ref={ref}\r\n    >\r\n      <div className=\"autocomplete_input_wrapper\" role=\"search\">\r\n        <input\r\n          data-testid=\"ac_input\"\r\n          type=\"text\"\r\n          placeholder={dictionary.search.placeholder}\r\n          value={search}\r\n          onChange={(e) => inputOnChange(e)}\r\n          onFocus={() => inputOnFocus()}\r\n          className=\"autocomplete_input\"\r\n        />\r\n        <div className=\"autocomplete_input_btn_wrapper\">\r\n          <div\r\n            data-testid=\"ac_input_clear_btn\"\r\n            className=\"autocomplete_input_icon\"\r\n            onClick={() => iconClearOnClick()}\r\n          >\r\n            <ClearIcon />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {showList === true\r\n        && (\r\n        <ul\r\n          data-testid=\"ac_dropdown\"\r\n          className=\"autocomplete_dropdown\"\r\n        >\r\n          {ListItems}\r\n        </ul>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nAutocomplete.propTypes = {\r\n  locations: PropTypes.arrayOf(PropTypes.shape(LocationType)).isRequired,\r\n  searchOnInput: PropTypes.func.isRequired,\r\n  searchOnClear: PropTypes.func.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Autocomplete;\r\n","import React from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport LocationAutocomplete from \"../Components/Location/Autocomplete\";\r\nimport {findLocation, cleanLocations} from '../Actions/LocationAction';\r\nimport {setCurrentLocation, setForecasts} from '../Actions/LocationAction';\r\n\r\nclass LocationLookup extends React.Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n      search: ''\r\n    }\r\n  }\r\n\r\n  static propTypes = {\r\n    dispatch: PropTypes.func.isRequired\r\n  };\r\n\r\n  searchOnInput = (newValue) => {\r\n\r\n    this.setState({\r\n      search: newValue\r\n    });\r\n\r\n    const {dispatch} = this.props;\r\n\r\n    if (typeof newValue === 'string' && newValue.trim().length > 1) {\r\n      dispatch(findLocation(newValue.trim()));\r\n    } else {\r\n      dispatch(cleanLocations());\r\n    }\r\n\r\n  };\r\n\r\n  searchOnClear = () => {\r\n\r\n    this.setState({\r\n      search: ''\r\n    });\r\n\r\n    this.props.dispatch(cleanLocations());\r\n  };\r\n\r\n  listOnSelect = (item) => {\r\n    this.props.dispatch(setCurrentLocation(item));\r\n    this.props.dispatch(setForecasts(item));\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <LocationAutocomplete\r\n      search={this.state.search}\r\n      searchOnInput={this.searchOnInput}\r\n      onSelect={this.listOnSelect}\r\n      searchOnClear={this.searchOnClear}\r\n      locations={this.props.locationList}\r\n    />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    locationList: state.weather.locationList\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(LocationLookup));","import React from 'react';\nimport Dropdown from 'react-bootstrap/NavDropdown';\n\nimport './LangSelector.css';\nfunction DropdownItems(options, onClickHandler) {\n  return options.map(item =>\n    <Dropdown.Item\n      key={item.id}\n      className='dropdown_item'\n      onClick={onClickHandler.bind(null, item)}\n    >{ item.text}</Dropdown.Item>\n  );\n}\n\nexport default function ({language, options, onChange}) {\n  const items = DropdownItems(options, onChange);\n  const className = `dropdown_title_${language.id}`;\n  return (\n    <Dropdown title={language.text} className=\"dropdown_title\"  id=\"lang-selector\">\n      { items }\n    </Dropdown>\n  );\n}","import React, { useContext } from 'react';\n\nimport { languageOptions } from '../Languages';\n\nimport { LanguageContext } from '../Providers/LanguageProvider';\n\nimport LanguageSelector from '../Components/LanguageSelector/LanguageSelector';\n\nexport default function LangSelector() {\n  const languageContext = useContext(LanguageContext);\n  const { language } = languageContext;\n  console.log('render language selector');\n  console.dir(language);\n\n  const handleLanguageChange = (selectedLanguage) => {\n    languageContext.setLanguage(selectedLanguage);\n  };\n\n  return (\n    <LanguageSelector\n      language={language}\n      options={languageOptions}\n      onChange={handleLanguageChange}/>\n  );\n\n}","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport LocationLookup from '../../Containers/LocationLookup';\r\nimport BookmarkIcon from '../../assets/icons/bookmark.svg';\r\nimport LangSelector from '../../Containers/LangSelector';\r\n\r\nimport { LanguageContext } from '../../Providers/LanguageProvider';\r\nimport './Navbar.css';\r\n\r\nexport function NavBar({ favoritesCount }) {\r\n  const { dictionary } = useContext(LanguageContext);\r\n\r\n  return (\r\n    <nav className=\"app-header px-2 py-2\" data-testid=\"navbar-top\" role=\"heading\">\r\n      <div className=\"row mx-2 w-100 d-flex flex-column flex-md-row\">\r\n        <div className=\"d-flex flex-shrink-1 flex-row justify-content-start align-items-start\">\r\n          <span className=\"app-header-title ml-2\">{ dictionary.title }</span>\r\n        </div>\r\n        <div className=\"flex-grow-1 justify-content-start align-items-start ml-2 ml-sm-1 ml-md-2 mr-1 mt-2 mt-sm-2 mt-md-0\">\r\n          <div className=\"d-flex flex-row align-items-center \">\r\n            <div className=\"flex-grow-1\">\r\n              <LocationLookup />\r\n            </div>\r\n            <Link to=\"/favorites\">\r\n              <div className=\"bookmarked\">\r\n                <img src={BookmarkIcon} width=\"36\" height=\"36\" alt=\"\" />\r\n                <span\r\n                  className=\"bookmarked_count\"\r\n                  data-testid=\"nav-fv-count\"\r\n                >\r\n                  {favoritesCount}\r\n                </span>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n          <div className=\"row\">\r\n            <LangSelector />\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  favoritesCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ favoritesCount: state.favorites.all.length });\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React from 'react';\nimport './CurrentWeather.css';\n\nexport default function ({ condClassName, children}) {\n  const cardClassName = `card current-card ${condClassName}`;\n\n  return (\n    <div\n      className={cardClassName}\n      id=\"id_current_weather_layout\"\n      data-testid=\"w_current_wrapper\"\n    >\n      <div className=\"card-body card-canvas\">\n        { children }\n      </div>\n    </div>\n  );\n}","import React from 'react';\r\n\r\nexport default class extends React.Component {\r\n  render() {\r\n    const { fill } = this.props || '#fcc603';\r\n    const { width } = this.props || \"24\";\r\n    const { height } = this.props || \"24\";\r\n    const favorite = () => (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width={width}\r\n        height={height}\r\n        viewBox=\"0 0 24 24\"\r\n        data-testid=\"w_current_svg_favorites\"\r\n      >\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path\r\n          d=\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\r\n          fill={fill}\r\n        />\r\n      </svg>\r\n    );\r\n\r\n    const favoriteTagged = () => (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width={width}\r\n        height={height}\r\n        viewBox=\"0 0 24 24\"\r\n        data-testid=\"w_current_svg_favorites\"\r\n        className=\"isFavorite\"\r\n      >\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path\r\n          d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\r\n          fill={fill}\r\n        />\r\n      </svg>\r\n    );\r\n\r\n    return this.props.isFavorite === true ? favoriteTagged() : favorite();\r\n  }\r\n}\r\n","import React from 'react';\nimport FavoriteIcon from \"../Icons/FavoriteIcon\";\nimport IconUpdate from '../../assets/icons/update.svg';\nimport format from \"date-fns/format\";\nimport addSeconds from \"date-fns/addSeconds\";\n\nfunction ProcessingIcon({ processing }) {\n  if (processing === true) {\n    return (\n      <span>\n        <img\n          id=\"w_current_update_icon\"\n          src={IconUpdate}\n          alt=\"update icon\"\n          width=\"24\"\n          height=\"24\"\n          className=\"processing\"\n          data-testid=\"w_current_update_icon\"\n        />\n      </span>\n    );\n  }\n\n  return '';\n}\n\nfunction getLocationDateTime(offsetMin, localDate = new Date()) {\n  const addSec = localDate.getTimezoneOffset() * 60 + offsetMin * 60;\n  return addSeconds(localDate, addSec);\n}\n\nexport default function ({ location, dateinfo, processing, addToFavorite, isFavorite, dic}) {\n\n  let dayOfWeek = '-';\n  let dateStr = '-';\n  let timeStr = '-';\n\n  if (dateinfo instanceof Object) {\n\n    const localDate = getLocationDateTime(dateinfo.offset);\n\n    dayOfWeek = format(localDate, 'EEEE', {locale: dic.locale});\n    dateStr = format(localDate, 'dd MMMM yyyy', {locale: dic.locale});\n    timeStr = format(localDate, 'HH:mm', {locale: dic.locale});\n  }\n\n  return (\n    <div>\n      <div className=\"d-flex flex-row justify-content-between\">\n        <div className=\"d-flex flex-row justify-content-start align-items-center\">\n          <h5\n            className=\"card-title text-white\"\n            id=\"w_current_loc_title\"\n            data-testid=\"w_current_loc_title\"\n          >\n            {`${location.name}, ${location.country}`}\n          </h5>\n          <span\n            id=\"w_current_add_to_fav_btn\"\n            className=\"current_favorite_icon mb-2 ml-2\"\n            data-testid=\"w_current_add_to_fav_btn\"\n            onClick={ addToFavorite }\n          >\n            <FavoriteIcon\n              isFavorite={isFavorite}\n              fill={\"#fcc603\"}\n              width=\"24\"\n              height=\"24\"\n            />\n          </span>\n        </div>\n        <ProcessingIcon processing={ processing }/>\n      </div>\n      <h6\n        id=\"w_current_today_title\"\n        className=\"card-subtitle mb-2 text-white\"\n        data-testid=\"w_current_today_title\"\n      >\n        {`${dic.weatherDic.today} ${dayOfWeek}, ${dateStr}, ${timeStr}`}\n      </h6>\n    </div>\n  );\n}","import React from 'react';\nimport windIcon from \"../../assets/svg/wind.svg\";\nimport humidityIcon from \"../../assets/svg/humidity.svg\";\nimport pressureIcon from \"../../assets/svg/pressure_light.svg\";\n\nexport default function ({ fact, cond, dic, language}) {\n  const condition = cond.condition[language.id];\n  const { weatherDic } = dic;\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\n          <div className=\"row mx-0\">\n            <span\n              id=\"w_current_fact_temp\"\n              className=\"current_temp text-white\"\n              data-testid=\"w_current_fact_temp\"\n            >\n              {Math.round(fact.temp)} &#176;С\n            </span>\n            <div className=\"current_img ml-3\">\n              <img src={cond.icon} width=\"48\" height=\"48\" alt=\"\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\n          <div className=\"row mx-0 d-flex flex-column justify-content-center mt-2\">\n            <span\n              id=\"w_current_condition\"\n              className=\"text-white\"\n              data-testid=\"w_current_condition\"\n            >\n              {condition}\n            </span>\n            <span\n              id=\"w_current_feels_like\"\n              className=\"text-white\"\n              data-testid=\"w_current_feels_like\"\n            >\n              {weatherDic.feelsLike} {Math.round(fact.feels_like)}&#176;С\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"d-flex flex-row justify-content-between mt-2 addInfo\">\n        <div className=\"d-flex flex-column justify-content-center align-items-center mr-2\">\n          <span className=\"text-white\">{weatherDic.wind}</span>\n          <img src={windIcon} width=\"24\" height=\"24\" alt=\"\" />\n          <span\n            id=\"w_current_wind_speed\"\n            className=\"text-white ml-1\"\n            data-testid=\"w_current_wind_speed\"\n          >\n            {fact.wind_speed} {weatherDic.wind_um}\n          </span>\n        </div>\n        <div className=\"d-flex flex-column justify-content-center align-items-center mr-2\">\n          <span className=\"text-white\">{weatherDic.humidity}</span>\n          <img\n            src={humidityIcon}\n            width=\"24\"\n            height=\"24\"\n            alt=\"humidity icon\"\n          />\n          <span\n            id=\"w_current_humidity\"\n            className=\"text-white ml-1\"\n            data-testid=\"w_current_humidity\"\n          >\n            {fact.humidity} %\n          </span>\n        </div>\n        <div className=\"d-flex flex-column justify-content-center align-items-center mr-2\">\n          <span className=\"text-white\">{weatherDic.pressure}</span>\n          <img\n            src={pressureIcon}\n            width=\"24\"\n            height=\"24\"\n            alt=\"pressure icon\"\n          />\n          <span\n            id=\"w_current_pressure_mm\"\n            className=\"text-white ml-1\"\n            data-testid=\"w_current_pressure_mm\"\n          >\n            {fact.pressure_mm} {weatherDic.pressure_um}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}","import ClearIcon from '../../assets/svg/clear.svg';\r\nimport PartlyCloudy from '../../assets/svg/partly-cloudy.svg';\r\nimport Cloudy from '../../assets/svg/cloudy.svg';\r\nimport Overcast from '../../assets/svg/overcast.svg';\r\nimport PartlyCloudyLightRain from '../../assets/svg/partly-cloudy-and-light-rain.svg';\r\nimport PartlyCloudyRain from '../../assets/svg/partly-cloudy-and-rain.svg';\r\nimport OvercastRain from '../../assets/svg/overcast-and-rain.svg';\r\nimport OvercastThunderstormsRain from '../../assets/svg/overcast-thunderstorms-with-rain.svg';\r\nimport OvercastWetSnow from '../../assets/svg/overcast-and-wet-snow.svg';\r\nimport PartlyCloudyLightSnow from '../../assets/svg/partly-cloudy-and-light-snow.svg';\r\nimport OvercastSnow from '../../assets/svg/overcast-and-snow.svg';\r\nimport Haze from '../../assets/svg/haze.svg';\r\nimport Tornado from \"../../assets/svg/tornado.svg\";\r\n\r\nconst conditionsToIcons = new Map();\r\n\r\nconditionsToIcons.set('clear', {\r\n  icon: ClearIcon,\r\n  condition: {\r\n    cs: 'Jasno',\r\n    en: 'Clear',\r\n    ru: 'Ясно',\r\n    de: 'klar',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'clear_day' : 'clear_night'),\r\n});\r\n\r\nconditionsToIcons.set('partly-cloudy', {\r\n  icon: PartlyCloudy,\r\n  condition: {\r\n    cs: 'Polojasno',\r\n    en: 'Partly cloudy',\r\n    ru: 'Малооблачно',\r\n    de: 'bewölkt',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'cloudy_light_day' : 'cloudy_light_night'),\r\n});\r\n\r\nconditionsToIcons.set('cloudy', {\r\n  icon: Cloudy,\r\n  condition: {\r\n    cs: 'Polojasno',\r\n    en: 'Cloudy',\r\n    ru: 'Облачно с прояснениями',\r\n    de: 'bewölkt, manchmal klar',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'cloudy_day' : 'cloudy_night'),\r\n});\r\n\r\nconditionsToIcons.set('overcast', {\r\n  icon: Overcast,\r\n  condition: {\r\n    cs: 'Zataženo',\r\n    en: 'Overcast',\r\n    ru: 'пасмурно',\r\n    de: 'bedeckt',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'overcast' : 'cloudy_night'),\r\n});\r\n\r\nconditionsToIcons.set('partly-cloudy-and-light-rain', {\r\n  icon: PartlyCloudyLightRain,\r\n  condition: {\r\n    cs: 'Polojasno a slabý déšť',\r\n    en: 'Partly cloudy and light rain',\r\n    ru: 'Небольшой дождь',\r\n    de: 'Teilweise bewölkt und leichter Regen'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'light_rain_day' : 'light_rain_night'),\r\n});\r\n\r\nconditionsToIcons.set('partly-cloudy-and-rain', {\r\n  icon: PartlyCloudyRain,\r\n  condition: {\r\n    cs: 'Polojasno a  déšť',\r\n    en: 'Partly cloudy and rain',\r\n    ru: 'Дождь',\r\n    de: 'Teilweise bewölkt und Regen'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'light_rain_day' : 'light_rain_night'),\r\n});\r\n\r\nconditionsToIcons.set('overcast-and-rain', {\r\n  icon: OvercastRain,\r\n  condition: {\r\n    cs: 'Zataženo a déšť',\r\n    en: 'Overcast and rain',\r\n    ru: 'Cильный дождь',\r\n    de: 'Bedeckt und Regen'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'rain_day' : 'rain_night'),\r\n});\r\n\r\nconditionsToIcons.set('overcast-thunderstorms-with-rain', {\r\n  icon: OvercastThunderstormsRain,\r\n  condition: {\r\n    cs: 'Silný déšť, bouřka',\r\n    en: 'Overcast thunderstorms and rain',\r\n    ru: 'Cильный дождь, гроза',\r\n    de: 'Bedeckte Gewitter und Regen'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'thunderstorm' : 'thunderstorm'),\r\n});\r\n\r\nconditionsToIcons.set('cloudy-and-light-rain', {\r\n  icon: PartlyCloudyLightRain,\r\n  condition: {\r\n    cs: 'Polojasno a slabý déšť',\r\n    en: 'Partly cloudy and light rain',\r\n    ru: 'Небольшой дождь',\r\n    de: 'Teilweise bewölkt und leichter Regen'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'light_rain_day' : 'light_rain_night'),\r\n});\r\n\r\nconditionsToIcons.set('overcast-and-light-rain', {\r\n  icon: PartlyCloudyRain,\r\n  condition: {\r\n    cs: 'Polojasno a  déšť',\r\n    en: 'Partly cloudy and rain',\r\n    ru: 'Дождь',\r\n    de: 'Teilweise bewölkt und Regen'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'light_rain_day' : 'light_rain_night'),\r\n});\r\n\r\nconditionsToIcons.set('cloudy-and-rain', {\r\n  icon: OvercastRain,\r\n  condition: {\r\n    cs: 'Zataženo a déšť',\r\n    en: 'Overcast and rain',\r\n    ru: 'Cильный дождь',\r\n    de: 'Bedeckt und Regen'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'rain_day' : 'rain_night'),\r\n});\r\n\r\nconditionsToIcons.set('overcast-and-wet-snow', {\r\n  icon: OvercastWetSnow,\r\n  condition: {\r\n    cs: 'Déšť se sněhem',\r\n    en: 'Overcast and wet snow',\r\n    ru: 'Дождь со снегом',\r\n    de: 'Bedeckter und nasser Schnee'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'rain_snow' : 'rain_snow'),\r\n});\r\n\r\nconditionsToIcons.set('partly-cloudy-and-light-snow', {\r\n  icon: PartlyCloudyLightSnow,\r\n  condition: {\r\n    cs: 'Polojasno a slabý sníh',\r\n    en: 'Partly cloudy and snow',\r\n    ru: 'Небольшой снег',\r\n    de: 'Teilweise bewölkt und Schnee'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\nconditionsToIcons.set('partly-cloudy-and-snow', {\r\n  icon: PartlyCloudyLightSnow,\r\n  condition: {\r\n    cs: 'Sníh',\r\n    en: 'Snow',\r\n    ru: 'Cнег',\r\n    de: 'Schnee'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\n\r\nconditionsToIcons.set('overcast-and-snow', {\r\n  icon: OvercastSnow,\r\n  condition: {\r\n    cs: 'Sněžení',\r\n    en: 'Snowfall',\r\n    ru: 'Cнегопад',\r\n    de: 'Schneefall'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\nconditionsToIcons.set('cloudy-and-light-snow', {\r\n  icon: OvercastSnow,\r\n  condition: {\r\n    cs: 'Sněžení',\r\n    en: 'Snowy',\r\n    ru: 'Небольшой снег',\r\n    de: 'Schneebedeckt'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\nconditionsToIcons.set('overcast-and-light-snow', {\r\n  icon: OvercastSnow,\r\n  condition: {\r\n    cs: 'Sněžení',\r\n    en: 'Snowy',\r\n    ru: 'Небольшой снег',\r\n    de: 'Schneebedeckt',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\nconditionsToIcons.set('cloudy-and-snow', {\r\n  icon: OvercastSnow,\r\n  condition: {\r\n    cs: 'Sněžení',\r\n    en: 'Snow',\r\n    ru: 'Cнег',\r\n    de: 'Schnee'\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\nconditionsToIcons.set(\"haze\", {\r\n\ticon: Haze,\r\n\tcondition: {\r\n\t\tcs: \"Mlha\",\r\n\t\ten: \"Fog\",\r\n\t\tru: \"Туман\",\r\n    de: 'Nebel'\r\n\t},\r\n\tgetClassName: (daytime) => (daytime === \"d\" ? \"clear_day\" : \"clear_night\"),\r\n});\r\n\r\nconditionsToIcons.set(\"tornado\", {\r\n\ticon: Tornado,\r\n\tcondition: {\r\n\t\tcs: \"Tornádo\",\r\n\t\ten: \"Tornado\",\r\n\t\tru: \"Торнадо\",\r\n    de: 'Tornado'\r\n\t},\r\n\tgetClassName: (daytime) => (daytime === \"d\" ? \"overcast\" : \"cloudy_night\"),\r\n});\r\n\r\n// clear — ясно.\r\n// partly-cloudy — малооблачно.\r\n// cloudy — облачно с прояснениями.\r\n// overcast — пасмурно.\r\n// partly-cloudy-and-light-rain — небольшой дождь.\r\n// partly-cloudy-and-rain — дождь.\r\n// overcast-and-rain — сильный дождь.\r\n// overcast-thunderstorms-with-rain — сильный дождь, гроза.\r\n// cloudy-and-light-rain — небольшой дождь.\r\n// overcast-and-light-rain — небольшой дождь.\r\n// cloudy-and-rain — дождь.\r\n// overcast-and-wet-snow — дождь со снегом.\r\n// partly-cloudy-and-light-snow — небольшой снег.\r\n// partly-cloudy-and-snow — снег.\r\n// overcast-and-snow — снегопад.\r\n// cloudy-and-light-snow — небольшой снег.\r\n// overcast-and-light-snow — небольшой снег.\r\n// cloudy-and-snow — снег.\r\n\r\nexport default conditionsToIcons;\r\n","import React from 'react';\r\nimport MapConditions from '../../Containers/CurrentWeather/MapConditionsToIcons';\r\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\r\nimport './hourly.css';\r\n\r\nfunction ForecastHour({ forecast, dic }) {\r\n  const cond = MapConditions.get(forecast.cond);\r\n  return (\r\n\t\t<div className=\"hour_card\">\r\n\t\t\t<div className=\"text-white\">{forecast.hour}{dic.time.h}</div>\r\n\t\t\t<span className=\"text-white\">{Math.round(forecast.temp)}&#176;</span>\r\n\t\t\t<div>\r\n\t\t\t\t<img src={cond.icon} width=\"24\" height=\"24\" alt=\"\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction CurrentHourly({ hourly, dic }) {\r\n\r\n  const Arrow = ({ text, className }) => {\r\n    return (\r\n      <div\r\n        className={className}\r\n      >\r\n\t\t\t\t{text}\r\n      </div>\r\n    );\r\n  };\r\n  const ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\r\n  const ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\r\n\r\n  console.log('hourly');\r\n  console.dir(hourly);\r\n\tlet cnt = 0;\r\n\tconst forecastList = hourly.map((item) => {\r\n\t\tcnt++;\r\n\t\treturn <ForecastHour forecast={item} dic={dic} key={`h_${cnt}`}/>;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div style={{ height: `100px` }}>\r\n      <ScrollMenu\r\n        data={forecastList}\r\n        wheel={false}\r\n        transition={0.3}\r\n        translate={0}\r\n        alignCenter={true}\r\n        clickWhenDrag={false}\r\n        dragging={true}\r\n        hideArrows={true}\r\n        hideSingleArrow={true}\r\n        scrollBy={1}\r\n        arrowLeft={ArrowLeft}\r\n        arrowRight={ArrowRight}\r\n      />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CurrentHourly;\r\n","import React from 'react';\r\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\r\nimport SunIcon from '../../assets/icons/sun.svg';\r\nimport MoonIcon from '../../assets/icons/moon.svg';\r\nimport './DayDuration.css';\r\n\r\nfunction getIcon(polarNight = false) {\r\n  if (polarNight === false) {\r\n    return (<img src={SunIcon} alt=\"sun icon\" width={68} height={68} />);\r\n  }\r\n  return (<img src={MoonIcon} alt=\"sun icon\" width={68} height={68} />);\r\n}\r\n\r\nfunction cardBody(durationTemplate, sunrise, sunset, lang) {\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column ml-1\">\r\n      <h6 className=\"card-title\">{durationTemplate}</h6>\r\n      <span className=\"card-text\">{`${lang.sunrise} - ${sunrise}`}</span>\r\n      <span className=\"card-text\">{`${lang.sunset} - ${sunset}`}</span>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nfunction DayDuration({ fact, dic }) {\r\n const { dayDuration, time } = dic;\r\n\r\n  const { sunrise_hh_mm: sunrise, sunset_hh_mm: sunset, day_duration } = fact;\r\n  \r\n  const polarNight = false;\r\n  let durationTemplate = '';\r\n  let className = 'card duration-card w-100 mt-3 mb-3 py-1';\r\n  if (polarNight === false) {\r\n    className += ' day';\r\n    const sunriseParts = sunrise.split(':');\r\n    const sunsetParts = sunset.split(':');\r\n\r\n    const diffMin = differenceInMinutes(\r\n      new Date(2020, 1, 1, parseInt(sunsetParts[0], 10), parseInt(sunsetParts[1], 10)),\r\n      new Date(2020, 1, 1, parseInt(sunriseParts[0], 10), parseInt(sunriseParts[1], 10))\r\n    );\r\n    const hours = day_duration.h;\r\n    const min = day_duration.m;\r\n\r\n    durationTemplate = `${dayDuration.duration}: ${hours} ${time.h} ${min} ${time.min}`;\r\n  } else {\r\n    className += ' night';\r\n    durationTemplate = 'Polární noc';\r\n  }\r\n\r\n  return (\r\n\t\t<div className={className}>\r\n\t\t\t<div className=\"row mx-0 d-flex flex-row\">\r\n\t\t\t\t<div className=\"d-flex justify-content-center align-items-center mx-2\">\r\n\t\t\t\t\t{getIcon(polarNight)}\r\n\t\t\t\t</div>\r\n\t\t\t\t{cardBody(durationTemplate, sunrise, sunset, dayDuration)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DayDuration;\r\n","export const ADD_LOCATION_TO_FAVORITES = 'ADD_LOCATION_TO_FAVORITES';\r\nexport const REMOVE_LOCATION_FROM_FAVORITES = 'REMOVE_LOCATION_FROM_FAVORITES';\r\n\r\nexport function addLocationToFavorites(location) {\r\n  return function (dispatch) {\r\n    dispatch({\r\n      type: ADD_LOCATION_TO_FAVORITES,\r\n      payload: location,\r\n    });\r\n  };\r\n}\r\n\r\nexport function removeLocationFromFavorites(location) {\r\n  console.log('removing...');\r\n  console.dir(location);\r\n  return function (dispatch) {\r\n    dispatch({\r\n      type: REMOVE_LOCATION_FROM_FAVORITES,\r\n      payload: location,\r\n    });\r\n  };\r\n}\r\n","export function favIndex(favorites, location) {\r\n  return favorites.findIndex((loc) => loc.name === location.name\r\n    && loc.country === location.country\r\n    && loc.region === location.region);\r\n}\r\n","import React, {useContext} from 'react';\r\nimport { shallowEqual, useSelector, useDispatch } from 'react-redux'\r\nimport CurrentCard from '../../Components/CurrentWeather/CurrentCard';\r\nimport CurrentLocation from '../../Components/CurrentWeather/CurrentLocation';\r\nimport CurrentInfo from '../../Components/CurrentWeather/CurrentInfo';\r\nimport CurrentHourly from '../../Components/CurrentWeather/CurrentHourly';\r\nimport DayDurationCard from '../../Components/CurrentDayDuration/DayDuration';\r\nimport { LanguageContext } from '../../Providers/LanguageProvider';\r\nimport MapConditions from './MapConditionsToIcons';\r\nimport { addLocationToFavorites } from '../../Actions/FaviritesActions';\r\nimport { favIndex } from '../../Helpers/helpers';\r\n\r\nfunction Duration(fact, dic) {\r\n  if ('sunrise_hh_mm' in fact) {\r\n\t\treturn <DayDurationCard fact={fact} dic={dic}/>;\r\n\t}\r\n  return '';\r\n}\r\n\r\nfunction CurrentContainer() {\r\n\r\n  const { dictionary, language } = useContext(LanguageContext);\r\n  const dispatch = useDispatch();\r\n\r\n  const { fact, location, currentHourly, favorites,  processing} = useSelector(state => ({\r\n    fact: state.weather.fact,\r\n    currentHourly: state.weather.currentHourly,\r\n    location: state.weather.location,\r\n    favorites: state.favorites.all,\r\n    processing: state.weather.processing\r\n  }), shallowEqual);\r\n\r\n  const cond = MapConditions.get(fact.condition);\r\n  const condClassName = cond.getClassName(fact.day_part);\r\n\r\n  const addToFavorite = () => dispatch(addLocationToFavorites(location));\r\n\r\n  const isFavorite = favIndex(favorites, location) !== -1;\r\n\r\n  return (\r\n\t\t<div>\r\n\t\t\t<div className=\"row mx-0\">\r\n\t\t\t\t<CurrentCard\r\n          condClassName={condClassName}\r\n\t\t\t\t>\r\n          <CurrentLocation\r\n            location={location}\r\n            dateinfo={fact.dateinfo}\r\n            processing={processing}\r\n            addToFavorite={addToFavorite}\r\n            isFavorite ={isFavorite}\r\n            dic={dictionary}\r\n          />\r\n          <CurrentInfo\r\n            fact={fact}\r\n            dic={dictionary}\r\n            language={language}\r\n            cond={cond}\r\n          />\r\n          <CurrentHourly\r\n            hourly={currentHourly}\r\n            dic={dictionary}\r\n          />\r\n        </CurrentCard>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row mx-0\">{Duration(fact, dictionary)}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CurrentContainer\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport format from 'date-fns/format';\r\n\r\nimport { fromUnixTime } from 'date-fns'\r\n\r\nimport MapConditions from '../../Containers/CurrentWeather/MapConditionsToIcons';\r\n\r\nimport './ForecastDay.css';\r\n\r\nfunction getClassNameByTemp({ temp_max }) {\r\n\tif (temp_max <= -10) {\r\n\t\treturn 'freezy';\r\n\t} else if (temp_max > -10 && temp_max <= 5) {\r\n\t\treturn 'cool';\r\n\t} else if (temp_max > 5 && temp_max <= 20 ) {\r\n\t\treturn 'warm';\r\n\t} else {\r\n\t\treturn 'hot';\r\n\t}\r\n}\r\n\r\nfunction ForecastDay({ forecast, dic, language }) {\r\n\r\n  const { weatherDic, locale } = dic;\r\n\r\n\tconst options = {\r\n\t\tlocale: locale,\r\n\t};\r\n\r\n\r\n\r\n\tconst weatherParts = {\r\n\t\tmorning: { title: \"Ráno\", data: forecast.morning },\r\n\t\tday: { title: \"Den\", data: forecast.day },\r\n\t\tevening: { title: \"Večer\", data: forecast.evening },\r\n\t\tnight: { title: \"Noc\", data: forecast.night },\r\n\t};\r\n\r\n\tconst fcDate = fromUnixTime(forecast.dt);\r\n\r\n\tlet dayOfWeek = format(fcDate, \"EE\", options);\r\n\tdayOfWeek = dayOfWeek.charAt(0).toUpperCase() + dayOfWeek.slice(1);\r\n\r\n\tconst dayFormated = format(fcDate, \"dd.MM\", options);\r\n\tconst cond = MapConditions.get(forecast.condition);\r\n\r\n\tconst condition = cond.condition[language.id];\r\n\r\n\r\n\tconst wrapperClassName = `forecast_day_wrapper ${getClassNameByTemp(forecast)}`;\r\n\r\n\treturn (\r\n\t\t<div className={wrapperClassName}>\r\n\t\t\t<div className=\"w-100 h-100 flex-grow-1 flex-fill\">\r\n\t\t\t\t<span className=\"fc_day_part__title\">{`${dayOfWeek}, ${dayFormated}`}</span>\r\n\t\t\t\t<div className=\"d-flex flex-column justify-content- align-items-center mt-4\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={cond.icon} width=\"48\" height=\"48\" alt=\"\" />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tid=\"w_current_fact_temp\"\r\n\t\t\t\t\t\tclassName=\"fc_temp_day\"\r\n\t\t\t\t\t\tdata-testid=\"w_current_fact_temp\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Math.round(forecast.temp_max)} &#176;С\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tid=\"w_current_fact_temp\"\r\n\t\t\t\t\t\tclassName=\"fc_temp_night\"\r\n\t\t\t\t\t\tdata-testid=\"w_current_fact_temp\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Math.round(forecast.temp_min)} &#176;С\r\n\t\t\t\t\t</span>\r\n          <span className=\"text-center\">{condition}</span>\r\n\t\t\t\t</div>\r\n      </div>\r\n\t\t\t<div className=\"day_info\">\r\n\t\t\t\t<div className=\"day_info_row\">\r\n\t\t\t\t\t<span className=\"fc_info_title\">{weatherDic.wind}</span>\r\n\t\t\t\t\t<span className=\"fc_info_value\">{forecast.wind_speed} {weatherDic.wind_um}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"day_info_row\">\r\n\t\t\t\t\t<span className=\"fc_info_title\">{weatherDic.humidity}</span>\r\n\t\t\t\t\t<span className=\"fc_info_value\">{forecast.humidity}%</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"day_info_row\">\r\n\t\t\t\t\t<span className=\"fc_info_title\">{weatherDic.pressure}</span>\r\n\t\t\t\t\t<span className=\"fc_info_value\">{forecast.pressure_mm} {weatherDic.pressure_um}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"day_info_row\">\r\n\t\t\t\t\t<span className=\"fc_info_title\">{weatherDic.uvi}</span>\r\n\t\t\t\t\t<span className=\"fc_info_value\">{forecast.uvi}%</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ForecastDay;\r\n","import React, {useContext} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ForecastDay from './ForecastDay';\r\nimport { LanguageContext } from '../../Providers/LanguageProvider';\r\nimport ScrollMenu from \"react-horizontal-scrolling-menu\";\r\nimport './forecast.css';\r\n\r\nfunction Forecast(props) {\r\n  const { forecasts } = props;\r\n  const { dictionary, language } = useContext(LanguageContext);\r\n  const translate = 0;\r\n  const transition = 0.3;\r\n  const Arrow = ({ text, className }) => {\r\n    return (\r\n      <div\r\n        className={className}\r\n      >{text}</div>\r\n    );\r\n  };\r\n\r\n\r\n  const ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\r\n  const ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\r\n\r\n  const forecastList = forecasts.map((item) => {\r\n      console.dir(item);\r\n      return (\r\n      <ForecastDay forecast={item} key={item.dt} dic={dictionary} language={language}/>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div data-testid=\"fc_card_wrapper\" className=\"forecast_wrapper ml-2\" >\r\n      <h5 className=\"card-title ml-2\">{dictionary.forecast.title}</h5>\r\n      <ScrollMenu\r\n        data={forecastList}\r\n        wheel={false}\r\n        transition={transition}\r\n        translate={translate}\r\n        alignCenter={true}\r\n        clickWhenDrag={false}\r\n        dragging={true}\r\n        hideArrows={true}\r\n        hideSingleArrow={true}\r\n        scrollBy={1}\r\n        arrowLeft={ArrowLeft}\r\n        arrowRight={ArrowRight}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nForecast.propTypes = {\r\n  forecasts: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  forecasts: state.weather.forecasts,\r\n});\r\nexport default connect(mapStateToProps)(Forecast);\r\n","import React from 'react';\n\nexport default  function ({ message }) {\n  return (\n    <div className=\"alert alert-primary\" role=\"alert\">\n      { message }\n    </div>\n  )\n}","import React, {useContext} from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport CurrentWeather from './CurrentWeather/CurrentContainer';\r\nimport Forecast from '../Components/Forecast/Forecast';\r\nimport LoadingAlert from '../Components/Alerts/LoadingAlert';\r\nimport { LanguageContext } from '../Providers/LanguageProvider';\r\n\r\nfunction WeatherLayout() {\r\n  const location  = useSelector((state) => state.weather.location, shallowEqual);\r\n\r\n  const { dictionary } = useContext(LanguageContext);\r\n\r\n  if (!location) return <LoadingAlert message = {dictionary.search.loadingPlaceholder} />;\r\n\r\n  return (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row mt-2\">\r\n\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n\t\t\t\t\t<CurrentWeather />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-6 mt-2 mt-md-0\">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row mt-2\">\r\n\t\t\t\t<Forecast />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WeatherLayout;\r\n","import React from 'react';\r\n\r\nfunction Question(props) {\r\n  const {\r\n    showModal, qParams, onYes, onCancel,\r\n  } = props;\r\n\r\n\r\n  const modalClassName = showModal === true ? 'modal bd-example-modal-sm' : 'modal fade bd-example-modal-sm';\r\n\r\n  const style = {};\r\n\r\n  if (showModal === true) {\r\n    style.display = 'block';\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={modalClassName}\r\n      style={style}\r\n      id=\"staticBackdrop\"\r\n      data-backdrop=\"static\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"staticBackdropLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-centered modal-sm\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-body\">\r\n            { qParams.text }\r\n          </div>\r\n          <div className=\"modal-footer py-0\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success\"\r\n              onClick={onYes}\r\n            >\r\n            Ano\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn\"\r\n              onClick={onCancel}\r\n            >\r\n            Zrušení\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './favorites.css';\r\nimport Question from '../Modal/Question';\r\nimport { removeLocationFromFavorites } from '../../Actions/FaviritesActions';\r\nimport { setCurrentLocation, setForecasts } from '../../Actions/LocationAction';\r\n\r\nfunction Favorites(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [qParams, setQParams] = useState({ text: '', subj: null });\r\n  const { favorites, dispatch } = props;\r\n\r\n  const startDialogRemove = (e, location) => {\r\n\r\n    e.stopPropagation();\r\n\r\n    const q = `Do you want to remove ${location.name} from favorites?`;\r\n\r\n    setQParams({\r\n      text: q,\r\n      subj: location,\r\n    });\r\n\r\n    setShow(true);\r\n  };\r\n\r\n  const destroyDialogRemove = () => {\r\n    setQParams({\r\n      text: '',\r\n      subj: null,\r\n    });\r\n\r\n    setShow(false);\r\n  };\r\n\r\n  const removeOnYes = () => {\r\n    dispatch(removeLocationFromFavorites(qParams.subj));\r\n    destroyDialogRemove();\r\n  };\r\n\r\n  const removeOnCancel = () => {\r\n    destroyDialogRemove();\r\n  };\r\n\r\n  const itemOnClick = (item) => {\r\n    props.dispatch(setCurrentLocation(item));\r\n    props.dispatch(setForecasts(item));\r\n    // eslint-disable-next-line react/prop-types\r\n    props.history.push('/');\r\n  };\r\n\r\n  let cnt = 0;\r\n  const items = favorites.map((location) => {\r\n    cnt += 1;\r\n    return (\r\n      <div\r\n        className=\"card favorites_item\"\r\n        key={`fav_item_${cnt}`}\r\n        onClick={() => itemOnClick(location)}\r\n      >\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"mr-2 close\"\r\n            onClick={(e) => startDialogRemove(e, location)}\r\n          >\r\n            <span className=\"text-white\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"card-body pt-0\">\r\n          <h5 className=\"card-title text-white\">{ location.name }</h5>\r\n          <h6 className=\"card-subtitle mb-2 text-white\">\r\n            { `${location.country}, ${location.region}` }\r\n          </h6>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  });\r\n\r\n  let warningNoFavorites = null;\r\n\r\n  if (favorites.length === 0) {\r\n    warningNoFavorites = (\r\n      <div className=\"alert alert-warning\" role=\"alert\">\r\n        Jejda, zdá se, že nemáte vybraná místa!\r\n        <Link to=\"/\">Přejděte na domovskou stránku</Link>\r\n        a zjistěte předpověď počasí ve vašem oblíbeném městě!\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-2 h-100\">\r\n      { warningNoFavorites }\r\n      <div className=\"favorites_row\">\r\n        { items }\r\n      </div>\r\n      <Question\r\n        showModal={show === true}\r\n        qParams={qParams}\r\n        onCancel={() => removeOnCancel()}\r\n        onYes={() => removeOnYes()}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nFavorites.propTypes = {\r\n  favorites: PropTypes.array,\r\n  dispatch: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    favorites: state.favorites.all,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(Favorites));\r\n","import React from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\n\r\nimport { setCurrentLocationByIP } from './Actions/LocationAction';\r\nimport NavBar from './Components/NavBar/NavBar';\r\nimport WeatherLayout from './Containers/WeatherLayout';\r\nimport Favorites from './Components/Favorites/Favorites';\r\nimport { LanguageProvider } from './Providers/LanguageProvider';\r\n\r\nfunction App() {\r\n\r\n  // after start application, if location is not defined yet\r\n  // try to get location by ip address\r\n  const location  = useSelector((state) => state.weather.location, shallowEqual);\r\n  const dispatch = useDispatch();\r\n\r\n  if (!location) {\r\n    dispatch(setCurrentLocationByIP());\r\n  }\r\n\r\n  return (\r\n    <LanguageProvider>\r\n      <div className=\"container-fluid app-container px-0\">\r\n        <Router>\r\n          <NavBar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={WeatherLayout} />\r\n            <Route path=\"/favorites\" component={Favorites} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </LanguageProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n// [::1] is the IPv6 localhost address.\r\n|| window.location.hostname === '[::1]'\r\n// 127.0.0.0/8 are considered localhost for IPv4.\r\n|| window.location.hostname.match(\r\n  /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        // eslint-disable-next-line no-use-before-define\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // eslint-disable-next-line no-console\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n          + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        // eslint-disable-next-line no-use-before-define\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n            // At this point, the updated precached content has been fetched,\r\n            // but the previous service worker will still serve the older\r\n            // content until all client tabs are closed.\r\n              // eslint-disable-next-line no-console\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n            + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n            // At this point, everything has been precached.\r\n            // It's the perfect time to display a\r\n            // \"Content is cached for offline use.\" message.\r\n              // eslint-disable-next-line no-console\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      // eslint-disable-next-line no-console\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n    || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n      // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      // eslint-disable-next-line no-console\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import localeCZ from 'date-fns/locale/cs';\r\n\r\nexport default {\r\n  coordinates: {\r\n    lat: null,\r\n    lon: null,\r\n  },\r\n  localeOptions: {\r\n    locale: localeCZ,\r\n  },\r\n  processing: false,\r\n  locationList: [],\r\n  location: null,\r\n  info: null,\r\n  fact: {\r\n    temp: -0,\r\n    feels_like: -0,\r\n    condition: 'cloudy',\r\n    wind_speed: -1,\r\n    pressure_mm: 0,\r\n    humidity: 0,\r\n    hourly: [],\r\n  },\r\n  currentHourly: [],\r\n  current: null,\r\n  forecasts: [],\r\n  fcSelected: null,\r\n};\r\n","import {\r\n  PROCESSING_REQUEST,\r\n  START_REQUEST_LOCATIONS,\r\n  REQUEST_LOCATIONS_SUCCESS,\r\n  REQUEST_LOCATIONS_FAILED,\r\n  SET_COORDINATES,\r\n  SET_LOCATION,\r\n  SET_FORECAST_INFO,\r\n} from '../Actions/LocationAction';\r\n\r\nimport initialState from './InitialStates/weather';\r\n\r\nconst weather = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PROCESSING_REQUEST:\r\n      return { ...state, processing: true };\r\n    case START_REQUEST_LOCATIONS:\r\n      return state;\r\n    case REQUEST_LOCATIONS_SUCCESS:\r\n      return { ...state, locationList: action.payload };\r\n    case REQUEST_LOCATIONS_FAILED:\r\n      return state;\r\n    case SET_LOCATION:\r\n      return { ...state, location: action.payload };\r\n    case SET_COORDINATES:\r\n      return { ...state, coordinates: action.payload };\r\n    case SET_FORECAST_INFO:\r\n      return {\r\n        ...state,\r\n        processing: false,\r\n        info: action.payload.info,\r\n        fact: action.payload.current,\r\n        currentHourly: action.payload.current.hourly,\r\n        forecasts: [...action.payload.daily],\r\n        // fcSelected: action.payload.forecasts[0],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default weather;\r\n","import {\r\n  ADD_LOCATION_TO_FAVORITES,\r\n  REMOVE_LOCATION_FROM_FAVORITES,\r\n} from '../Actions/FaviritesActions';\r\n\r\nimport { favIndex } from '../Helpers/helpers';\r\n\r\n//import initialState from './InitialStates/favorites';\r\nconst initialState = {\r\n  all: [],\r\n};\r\nexport default function favorites(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_LOCATION_TO_FAVORITES:\r\n      if (favIndex(state.all, action.payload) === -1) {\r\n        return {\r\n          ...state,\r\n          all: [...state.all, action.payload],\r\n        };\r\n      }\r\n      return state;\r\n    case REMOVE_LOCATION_FROM_FAVORITES:\r\n      const ind = favIndex(state.all, action.payload);\r\n      return ind === -1\r\n        ? this.state\r\n        : { all: [...state.all.slice(0, ind), ...state.all.slice(ind + 1)] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport weather from './WeatherReducer';\r\nimport favorites from './FavoritesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  weather,\r\n  favorites,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport './index.css';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport rootReducer from './Reducers';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n  applyMiddleware(thunk),\r\n));\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/overcast-and-snow.b3673467.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-and-light-rain.418c454c.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-and-rain.075febfd.svg\";","module.exports = __webpack_public_path__ + \"static/media/overcast-and-rain.ef559ac7.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-and-light-snow.29c5f202.svg\";","module.exports = __webpack_public_path__ + \"static/media/bookmark.eb2c4a38.svg\";","module.exports = __webpack_public_path__ + \"static/media/update.8d36acbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.51bb01ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/humidity.55d1c59d.svg\";","module.exports = __webpack_public_path__ + \"static/media/pressure_light.20964ed5.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.346b346f.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy.e9ee5d2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.7ee70f9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/overcast.bd652b9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/overcast-thunderstorms-with-rain.f50dfdb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/overcast-and-wet-snow.9d8867ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/haze.6c4a03a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/tornado.d82015ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.dd42591b.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.5039864c.svg\";"],"sourceRoot":""}