{"version":3,"sources":["assets/logo.svg","PropTypes/LocationType.js","api/index.js","Actions/LocationAction.js","Components/Location/useOutsideClick.js","Components/Icons/Clear.js","Components/Location/Autocomplete.js","Containers/LocationLookup.js","Components/NavBar/NavBar.jsx","Containers/CurrentWeather/MapConditionsToIcons.js","Components/CurrentWeather/CurrentHourly.jsx","Components/Icons/FavoriteIcon.js","Actions/FaviritesActions.js","Helpers/helpers.js","Components/CurrentWeather/Current.jsx","Components/CurrentDayDuration/DayDuration.js","Containers/CurrentWeather/CurrentContainer.js","Components/Forecast/ForecastDay.jsx","Components/Forecast/Forecast.jsx","Containers/WeatherLayout.js","Components/Modal/Question.js","Components/Favorites/Favorites.js","App.js","serviceWorker.js","Reducers/InitialStates/weather.js","Reducers/WeatherReducer.js","Reducers/FavoritesReducer.js","Reducers/index.js","index.js","assets/svg/overcast-and-snow.svg","assets/svg/humidity.svg","assets/svg/pressure_light.svg","assets/svg/partly-cloudy-and-light-rain.svg","assets/svg/partly-cloudy-and-rain.svg","assets/svg/overcast-and-rain.svg","assets/svg/partly-cloudy-and-light-snow.svg","assets/icons/bookmark.svg","assets/svg/clear.svg","assets/svg/partly-cloudy.svg","assets/svg/cloudy.svg","assets/svg/overcast.svg","assets/svg/overcast-thunderstorms-with-rain.svg","assets/svg/overcast-and-wet-snow.svg","assets/svg/haze.svg","assets/svg/tornado.svg","assets/svg/wind.svg","assets/icons/update.svg","assets/icons/sun.svg","assets/icons/moon.svg"],"names":["module","exports","PropTypes","string","isRequired","number","connection","Connection","this","host","search","axios","get","trim","res","status","data","Array","query","params","lat","lon","limit","Object","prototype","hasOwnProperty","call","options","getConn","PROCESSING_REQUEST","REQUEST_LOCATIONS_FAILED","SET_LOCATION","SET_FORECAST_INFO","CompleteRequestLocations","payload","type","cleanLocations","dispatch","setCurrentLocation","location","setForecasts","conn","console","log","dir","getForecast","then","catch","err","useOutsideClick","ref","callback","handleClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","xmlns","width","height","viewBox","className","d","fill","Autocomplete","props","searchOnInput","searchOnClear","onSelect","locations","useState","setSearch","showDropdown","setShowDropdown","useRef","showList","length","ListItems","map","item","key","onClick","stopPropagation","data-testid","name","role","placeholder","value","onChange","inputOnChange","onFocus","Clear","LocationLookup","newValue","setState","findLocation","listOnSelect","history","push","state","locationList","React","Component","connect","weather","withRouter","favoritesCount","favorites","all","to","src","BookmarkIcon","alt","conditionsToIcons","Map","set","icon","ClearIcon","condition","cs","en","ru","getClassName","daytime","PartlyCloudy","Cloudy","Overcast","PartlyCloudyLightRain","PartlyCloudyRain","OvercastRain","OvercastThunderstormsRain","OvercastWetSnow","PartlyCloudyLightSnow","OvercastSnow","Haze","Tornado","ForecastHour","forecast","cond","MapConditions","hour","Math","round","temp","CurrentHourly","forecastList","hourly","style","config","stiffness","damping","isFavorite","ADD_LOCATION_TO_FAVORITES","REMOVE_LOCATION_FROM_FAVORITES","favIndex","findIndex","loc","country","region","Current","addToFav","prevProps","prevState","snapshot","isFavoriteNow","offsetMin","localDate","Date","addSec","getTimezoneOffset","addSeconds","localeOptions","fact","dayOfWeek","dateStr","timeStr","getLocationDateTime","dateinfo","offset","format","cardClassName","day_part","id","processing","IconUpdate","processingIconRender","feels_like","windIcon","wind_speed","humidityIcon","humidity","pressureIcon","pressure_mm","DayDuration","sunrise","sunrise_hh_mm","sunset","sunset_hh_mm","day_duration","durationTemplate","sunriseParts","split","sunsetParts","hours","differenceInMinutes","parseInt","h","min","m","SunIcon","MoonIcon","getIcon","cardBody","info","fcSelectedDay","fcSelected","useSelector","PartOfDayForecast","title","ForecastDay","locale","localeCZ","weatherParts","morning","day","evening","night","fcDate","fromUnixTime","dt","charAt","toUpperCase","slice","dayFormated","parts","keys","forEach","temp_max","temp_min","uvi","forecasts","Question","showModal","qParams","onYes","onCancel","modalClassName","display","data-backdrop","tabIndex","aria-labelledby","aria-hidden","text","show","setShow","subj","setQParams","destroyDialogRemove","removeOnYes","cnt","items","q","startDialogRemove","warningNoFavorites","App","getCurrentInfo","locInfo","exact","path","component","WeatherLayout","Favorites","defaultProps","Boolean","window","hostname","match","coordinates","initialState","action","daily","rootReducer","combineReducers","ind","store","createStore","applyMiddleware","thunk","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.977168bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cfb1e955.svg\";","import PropTypes from 'prop-types';\r\nexport default {\r\n\tname: PropTypes.string.isRequired,\r\n\tcountry: PropTypes.string.isRequired,\r\n\tregion: PropTypes.string.isRequired,\r\n\tlat: PropTypes.number.isRequired,\r\n\tlon: PropTypes.number.isRequired,\r\n\ttimezone_id: PropTypes.string,\r\n\tlocaltime: PropTypes.string,\r\n\tlocaltime_epoch: PropTypes.number,\r\n\tutc_offset: PropTypes.string,\r\n};\r\n","import axios from 'axios';\r\n\r\nlet connection = null;\r\n\r\nclass Connection {\r\n  constructor() {\r\n    //this.host = 'https://tm-weather-js-api.herokuapp.com/';\r\n    this.host = 'https://tm-weather-js-api.herokuapp.com';\r\n\t\t//this.host = \"http://localhost:9000\";\r\n  }\r\n\r\n  async findLocation(search) {\r\n    try {\r\n      const res = await axios.get(`${this.host}/api/autocomplete/?q=${search.trim()}`);\r\n\r\n      if (res.status === 200 && res.data instanceof Array) {\r\n        return res.data;\r\n      }\r\n\r\n      return [];\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  async getForecast(query) {\r\n    try {\r\n      const res = await axios.get(`${this.host}/api/forecast/`, {\r\n        params: {\r\n          lat: query.lat,\r\n          lon: query.lon,\r\n          limit: query.limit,\r\n        },\r\n      });\r\n\r\n      if (Object.prototype.hasOwnProperty.call(res.data, 'current')) {\r\n        return res.data;\r\n      }\r\n\r\n      return [];\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  async getCurrentInfo(query) {\r\n    const options = {};\r\n\r\n    if (query instanceof Object) {\r\n      options.params = query;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get(`${this.host}/api/current/`, options);\r\n\r\n      if (res.status === 200) {\r\n        return res.data;\r\n      }\r\n      \r\n      return [];\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n\r\nexport default function getConn() {\r\n  if (connection === null) {\r\n    connection = new Connection();\r\n  }\r\n\r\n  return connection;\r\n}\r\n","import getConn from '../api';\r\n\r\nexport const PROCESSING_REQUEST = 'PROCESSING_REQUEST';\r\nexport const START_REQUEST_LOCATIONS = 'START_REQUEST_LOCATIONS';\r\nexport const REQUEST_LOCATIONS_SUCCESS = 'REQUEST_LOCATIONS_SUCCESS';\r\nexport const REQUEST_LOCATIONS_FAILED = 'REQUEST_LOCATIONS_FAILED';\r\nexport const SET_COORDINATES = 'SET_COORDINATES';\r\nexport const SET_LOCATION = 'SET_LOCATION';\r\nexport const SET_FORECAST_INFO = 'SET_FORECAST_INFO';\r\n\r\nexport const CompleteRequestLocations = (payload) => ({\r\n  type: REQUEST_LOCATIONS_SUCCESS,\r\n  payload,\r\n});\r\n\r\nexport function cleanLocations() {\r\n  return function (dispatch) {\r\n    dispatch(CompleteRequestLocations([]));\r\n  };\r\n}\r\n\r\nexport function setCurrentLocationByIP() {\r\n  return function (dispatch) {\r\n    const conn = getConn();\r\n    \r\n    return conn.getCurrentInfo()\r\n      .then((locInfo) => {\r\n        dispatch(setForecasts(locInfo));\r\n\r\n        dispatch({\r\n          type: SET_LOCATION,\r\n          payload: locInfo,\r\n        });\r\n      });\r\n  };\r\n}\r\n\r\nexport function setCurrentLocation(location) {\r\n  return function (dispatch) {\r\n    dispatch({\r\n      type: SET_LOCATION,\r\n      payload: location,\r\n    });\r\n  };\r\n}\r\n\r\nexport function setForecasts(location) {\r\n  return function (dispatch) {\r\n    const conn = getConn();\r\n\r\n    dispatch({ type: PROCESSING_REQUEST });\r\n    console.log('msg from setForecasts func');\r\n    console.dir(location);\r\n\r\n    return conn.getForecast({\r\n      lat: location.lat,\r\n      lon: location.lon,\r\n      limit: 7,\r\n    }).then((data) => {\r\n\r\n      dispatch({\r\n        type: SET_FORECAST_INFO,\r\n        payload: data,\r\n      });\r\n    }).catch((err) => {\r\n\r\n    });\r\n  };\r\n}\r\n\r\nexport function findLocation(search) {\r\n  return function (dispatch) {\r\n    const conn = getConn();\r\n\r\n    return conn.findLocation(search)\r\n      .then((data) => {\r\n        console.dir(data);\r\n        dispatch(CompleteRequestLocations(data));\r\n      })\r\n      .catch(() => {\r\n        console.dir('error');\r\n        dispatch({ type: REQUEST_LOCATIONS_FAILED, payload: [] });\r\n      });\r\n  };\r\n}","import { useEffect } from 'react';\r\n\r\nconst useOutsideClick = (ref, callback) => {\r\n  const handleClick = e => {\r\n    if (ref.current && !ref.current.contains(e.target)) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useOutsideClick;\r\n","import React from 'react';\r\n\r\nexport default function () {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"autocomplete_input_btn_icon\">\r\n      <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\r\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LocationType from '../../PropTypes/LocationType';\r\nimport useOutsideClick from './useOutsideClick';\r\nimport './Autocomplete.css';\r\nimport ClearIcon from '../Icons/Clear';\r\n\r\nfunction Autocomplete(props) {\r\n  const {\r\n    searchOnInput,\r\n    searchOnClear,\r\n    onSelect,\r\n    locations,\r\n  } = props;\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [showDropdown, setShowDropdown] = useState(true);\r\n  const ref = useRef();\r\n\r\n  useOutsideClick(ref, () => {\r\n    setShowDropdown(false);\r\n  });\r\n\r\n  function inputOnChange(e) {\r\n    searchOnInput(e.target.value);\r\n    setSearch(e.target.value);\r\n    setShowDropdown(true);\r\n  }\r\n\r\n  function inputOnFocus() {\r\n    if (locations.length > 0) {\r\n      setShowDropdown(true);\r\n    }\r\n  }\r\n\r\n  function iconClearOnClick() {\r\n    setSearch('');\r\n    setShowDropdown(false);\r\n    searchOnClear();\r\n  }\r\n\r\n  function handleSelect(event, location) {\r\n    event.stopPropagation();\r\n\r\n    searchOnInput('');\r\n\r\n    setSearch('');\r\n    setShowDropdown(false);\r\n\r\n    onSelect(location);\r\n  }\r\n\r\n  const showList = showDropdown === true && locations.length > 0;\r\n  const ListItems = locations.map((item, key) => (\r\n    <li\r\n      key={key}\r\n      className=\"autocomplete_dropdown_item\"\r\n      onClick={(e) => handleSelect(e, item)}\r\n      data-testid={`ac_dropdown_item_${key}`}\r\n    >\r\n      {`${item.name}`}\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div\r\n      className=\"autocomplete_wrapper\"\r\n      ref={ref}\r\n    >\r\n      <div className=\"autocomplete_input_wrapper\" role=\"search\">\r\n        <input\r\n          data-testid=\"ac_input\"\r\n          type=\"text\"\r\n          placeholder=\"Město\"\r\n          value={search}\r\n          onChange={(e) => inputOnChange(e)}\r\n          onFocus={() => inputOnFocus()}\r\n          className=\"autocomplete_input\"\r\n        />\r\n        <div className=\"autocomplete_input_btn_wrapper\">\r\n          <div\r\n            data-testid=\"ac_input_clear_btn\"\r\n            className=\"autocomplete_input_icon\"\r\n            onClick={() => iconClearOnClick()}\r\n          >\r\n            <ClearIcon />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {showList === true\r\n        && (\r\n        <ul\r\n          data-testid=\"ac_dropdown\"\r\n          className=\"autocomplete_dropdown\"\r\n        >\r\n          {ListItems}\r\n        </ul>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nAutocomplete.propTypes = {\r\n  locations: PropTypes.arrayOf(PropTypes.shape(LocationType)).isRequired,\r\n  searchOnInput: PropTypes.func.isRequired,\r\n  searchOnClear: PropTypes.func.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Autocomplete;\r\n","import React from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport LocationAutocomplete from \"../Components/Location/Autocomplete\";\r\nimport {findLocation, cleanLocations} from '../Actions/LocationAction';\r\nimport {setCurrentLocation, setForecasts} from '../Actions/LocationAction';\r\n\r\nclass LocationLookup extends React.Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state = {\r\n      search: ''\r\n    }\r\n  }\r\n\r\n  static propTypes = {\r\n    dispatch: PropTypes.func.isRequired\r\n  };\r\n\r\n  searchOnInput = (newValue) => {\r\n\r\n    this.setState({\r\n      search: newValue\r\n    });\r\n\r\n    const {dispatch} = this.props;\r\n\r\n    if (typeof newValue === 'string' && newValue.trim().length > 1) {\r\n      dispatch(findLocation(newValue.trim()));\r\n    } else {\r\n      dispatch(cleanLocations());\r\n    }\r\n\r\n  };\r\n\r\n  searchOnClear = () => {\r\n\r\n    this.setState({\r\n      search: ''\r\n    });\r\n\r\n    this.props.dispatch(cleanLocations());\r\n  };\r\n\r\n  listOnSelect = (item) => {\r\n    this.props.dispatch(setCurrentLocation(item));\r\n    this.props.dispatch(setForecasts(item));\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <LocationAutocomplete\r\n      search={this.state.search}\r\n      searchOnInput={this.searchOnInput}\r\n      onSelect={this.listOnSelect}\r\n      searchOnClear={this.searchOnClear}\r\n      locations={this.props.locationList}\r\n    />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    locationList: state.weather.locationList\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(LocationLookup));","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport LocationLookup from '../../Containers/LocationLookup';\r\nimport BookmarkIcon from '../../assets/icons/bookmark.svg';\r\nimport './Navbar.css';\r\nimport logo from '../../assets/logo.svg';\r\n\r\nexport function NavBar({ favoritesCount }) {\r\n  return (\r\n    <nav className=\"app-header px-2 py-2\" data-testid=\"navbar-top\" role=\"heading\">\r\n      <div className=\"row mx-2 w-100 d-flex flex-column flex-md-row\">\r\n        <div className=\"d-flex flex-shrink-1 flex-row justify-content-start align-items-start\">\r\n          <span className=\"app-header-title ml-2\">Počasí</span>\r\n        </div>\r\n        <div className=\"flex-grow-1 justify-content-start align-items-start ml-2 ml-sm-1 ml-md-2 mr-1 mt-2 mt-sm-2 mt-md-0\">\r\n          <div className=\"d-flex flex-row align-items-center \">\r\n            <div className=\"flex-grow-1\">\r\n              <LocationLookup />\r\n            </div>\r\n            <Link to=\"/favorites\">\r\n              <div className=\"bookmarked\">\r\n                <img src={BookmarkIcon} width=\"36\" height=\"36\" alt=\"\" />\r\n                <span\r\n                  className=\"bookmarked_count\"\r\n                  data-testid=\"nav-fv-count\"\r\n                >\r\n                  {favoritesCount}\r\n                </span>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  favoritesCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ favoritesCount: state.favorites.all.length });\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import ClearIcon from '../../assets/svg/clear.svg';\r\nimport PartlyCloudy from '../../assets/svg/partly-cloudy.svg';\r\nimport Cloudy from '../../assets/svg/cloudy.svg';\r\nimport Overcast from '../../assets/svg/overcast.svg';\r\nimport PartlyCloudyLightRain from '../../assets/svg/partly-cloudy-and-light-rain.svg';\r\nimport PartlyCloudyRain from '../../assets/svg/partly-cloudy-and-rain.svg';\r\nimport OvercastRain from '../../assets/svg/overcast-and-rain.svg';\r\nimport OvercastThunderstormsRain from '../../assets/svg/overcast-thunderstorms-with-rain.svg';\r\nimport OvercastWetSnow from '../../assets/svg/overcast-and-wet-snow.svg';\r\nimport PartlyCloudyLightSnow from '../../assets/svg/partly-cloudy-and-light-snow.svg';\r\nimport OvercastSnow from '../../assets/svg/overcast-and-snow.svg';\r\nimport Haze from '../../assets/svg/haze.svg';\r\nimport Tornado from \"../../assets/svg/tornado.svg\";\r\n\r\nconst conditionsToIcons = new Map();\r\n\r\nconditionsToIcons.set('clear', {\r\n  icon: ClearIcon,\r\n  condition: {\r\n    cs: 'Jasno',\r\n    en: 'Clear',\r\n    ru: 'Ясно',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'clear_day' : 'clear_night'),\r\n});\r\n\r\nconditionsToIcons.set('partly-cloudy', {\r\n  icon: PartlyCloudy,\r\n  condition: {\r\n    cs: 'Polojasno',\r\n    en: 'Partly cloudy',\r\n    ru: 'Малооблачно',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'cloudy_light_day' : 'cloudy_light_night'),\r\n});\r\n\r\nconditionsToIcons.set('cloudy', {\r\n  icon: Cloudy,\r\n  condition: {\r\n    cs: 'Polojasno',\r\n    en: 'Cloudy',\r\n    ru: 'Облачно с прояснениями',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'cloudy_day' : 'cloudy_night'),\r\n});\r\n\r\nconditionsToIcons.set('overcast', {\r\n  icon: Overcast,\r\n  condition: {\r\n    cs: 'Zataženo',\r\n    en: 'Overcast',\r\n    ru: 'пасмурно',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'overcast' : 'cloudy_night'),\r\n});\r\n\r\nconditionsToIcons.set('partly-cloudy-and-light-rain', {\r\n  icon: PartlyCloudyLightRain,\r\n  condition: {\r\n    cs: 'Polojasno a slabý déšť',\r\n    en: 'Partly cloudy and light rain',\r\n    ru: 'Небольшой дождь',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'light_rain_day' : 'light_rain_night'),\r\n});\r\n\r\nconditionsToIcons.set('partly-cloudy-and-rain', {\r\n  icon: PartlyCloudyRain,\r\n  condition: {\r\n    cs: 'Polojasno a  déšť',\r\n    en: 'Partly cloudy and rain',\r\n    ru: 'Дождь',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'light_rain_day' : 'light_rain_night'),\r\n});\r\n\r\nconditionsToIcons.set('overcast-and-rain', {\r\n  icon: OvercastRain,\r\n  condition: {\r\n    cs: 'Zataženo a déšť',\r\n    en: 'Overcast and rain',\r\n    ru: 'Cильный дождь',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'rain_day' : 'rain_night'),\r\n});\r\n\r\nconditionsToIcons.set('overcast-thunderstorms-with-rain', {\r\n  icon: OvercastThunderstormsRain,\r\n  condition: {\r\n    cs: 'Silný déšť, bouřka',\r\n    en: 'Overcast thunderstorms and rain',\r\n    ru: 'Cильный дождь, гроза',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'thunderstorm' : 'thunderstorm'),\r\n});\r\n\r\nconditionsToIcons.set('cloudy-and-light-rain', {\r\n  icon: PartlyCloudyLightRain,\r\n  condition: {\r\n    cs: 'Polojasno a slabý déšť',\r\n    en: 'Partly cloudy and light rain',\r\n    ru: 'Небольшой дождь',\r\n    getClassName: (daytime) => (daytime === 'd' ? 'light_rain_day' : 'light_rain_night'),\r\n  },\r\n});\r\n\r\nconditionsToIcons.set('overcast-and-light-rain', {\r\n  icon: PartlyCloudyRain,\r\n  condition: {\r\n    cs: 'Polojasno a  déšť',\r\n    en: 'Partly cloudy and rain',\r\n    ru: 'Дождь',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'light_rain_day' : 'light_rain_night'),\r\n});\r\n\r\nconditionsToIcons.set('cloudy-and-rain', {\r\n  icon: OvercastRain,\r\n  condition: {\r\n    cs: 'Zataženo a déšť',\r\n    en: 'Overcast and rain',\r\n    ru: 'Cильный дождь',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'rain_day' : 'rain_night'),\r\n});\r\n\r\nconditionsToIcons.set('overcast-and-wet-snow', {\r\n  icon: OvercastWetSnow,\r\n  condition: {\r\n    cs: 'Déšť se sněhem',\r\n    en: 'Overcast and wet snow',\r\n    ru: 'Дождь со снегом',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'rain_snow' : 'rain_snow'),\r\n});\r\n\r\nconditionsToIcons.set('partly-cloudy-and-light-snow', {\r\n  icon: PartlyCloudyLightSnow,\r\n  condition: {\r\n    cs: 'Polojasno a slabý sníh',\r\n    en: 'Partly cloudy and snow',\r\n    ru: 'Небольшой снег',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\nconditionsToIcons.set('partly-cloudy-and-snow', {\r\n  icon: PartlyCloudyLightSnow,\r\n  condition: {\r\n    cs: 'Sníh',\r\n    en: 'Snow',\r\n    ru: 'Cнег',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\n\r\nconditionsToIcons.set('overcast-and-snow', {\r\n  icon: OvercastSnow,\r\n  condition: {\r\n    cs: 'Sněžení',\r\n    en: 'Snowfall',\r\n    ru: 'Cнегопад',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\nconditionsToIcons.set('cloudy-and-light-snow', {\r\n  icon: OvercastSnow,\r\n  condition: {\r\n    cs: 'Sněžení',\r\n    en: 'Snowy',\r\n    ru: 'Небольшой снег',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\nconditionsToIcons.set('overcast-and-light-snow', {\r\n  icon: OvercastSnow,\r\n  condition: {\r\n    cs: 'Sněžení',\r\n    en: 'Snowy',\r\n    ru: 'Небольшой снег',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\nconditionsToIcons.set('cloudy-and-snow', {\r\n  icon: OvercastSnow,\r\n  condition: {\r\n    cs: 'Sněžení',\r\n    en: 'Snow',\r\n    ru: 'Cнег',\r\n  },\r\n  getClassName: (daytime) => (daytime === 'd' ? 'snow_night' : 'snow_night'),\r\n});\r\n\r\nconditionsToIcons.set(\"haze\", {\r\n\ticon: Haze,\r\n\tcondition: {\r\n\t\tcs: \"Mlha\",\r\n\t\ten: \"Fog\",\r\n\t\tru: \"Туман\",\r\n\t},\r\n\tgetClassName: (daytime) => (daytime === \"d\" ? \"clear_day\" : \"clear_night\"),\r\n});\r\n\r\nconditionsToIcons.set(\"tornado\", {\r\n\ticon: Tornado,\r\n\tcondition: {\r\n\t\tcs: \"Tornádo\",\r\n\t\ten: \"Tornado\",\r\n\t\tru: \"Торнадо\",\r\n\t},\r\n\tgetClassName: (daytime) => (daytime === \"d\" ? \"overcast\" : \"cloudy_night\"),\r\n});\r\n\r\n// clear — ясно.\r\n// partly-cloudy — малооблачно.\r\n// cloudy — облачно с прояснениями.\r\n// overcast — пасмурно.\r\n// partly-cloudy-and-light-rain — небольшой дождь.\r\n// partly-cloudy-and-rain — дождь.\r\n// overcast-and-rain — сильный дождь.\r\n// overcast-thunderstorms-with-rain — сильный дождь, гроза.\r\n// cloudy-and-light-rain — небольшой дождь.\r\n// overcast-and-light-rain — небольшой дождь.\r\n// cloudy-and-rain — дождь.\r\n// overcast-and-wet-snow — дождь со снегом.\r\n// partly-cloudy-and-light-snow — небольшой снег.\r\n// partly-cloudy-and-snow — снег.\r\n// overcast-and-snow — снегопад.\r\n// cloudy-and-light-snow — небольшой снег.\r\n// overcast-and-light-snow — небольшой снег.\r\n// cloudy-and-snow — снег.\r\n\r\nexport default conditionsToIcons;\r\n","import React from 'react';\r\nimport HorizontalScroll from 'react-scroll-horizontal';\r\nimport MapConditions from '../../Containers/CurrentWeather/MapConditionsToIcons';\r\n\r\nimport './hourly.css';\r\n\r\nfunction ForecastHour({ forecast }) {\r\n  const cond = MapConditions.get(forecast.cond);\r\n  return (\r\n\t\t<div className=\"hour_card\">\r\n\t\t\t<div className=\"text-white\">{forecast.hour}h</div>\r\n\t\t\t<span className=\"text-white\">{Math.round(forecast.temp)}&#176;</span>\r\n\t\t\t<div>\r\n\t\t\t\t<img src={cond.icon} width=\"24\" height=\"24\" alt=\"\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction CurrentHourly({ hourly }) {\r\n\r\n\tconst forecastList = hourly.map((item) => {\r\n\t\treturn <ForecastHour forecast={item} />;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div style={{ height: `100px` }}>\r\n\t\t\t<HorizontalScroll config={{ stiffness: 160, damping: 110 }}>\r\n\t\t\t  { forecastList }\r\n\t\t\t</HorizontalScroll>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CurrentHourly;\r\n","import React from 'react';\r\n\r\nexport default class extends React.Component {\r\n  render() {\r\n    const { fill } = this.props || '#fcc603';\r\n    const { width } = this.props || \"24\";\r\n    const { height } = this.props || \"24\";\r\n    const favorite = () => (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width={width}\r\n        height={height}\r\n        viewBox=\"0 0 24 24\"\r\n        data-testid=\"w_current_svg_favorites\"\r\n      >\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path\r\n          d=\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\r\n          fill={fill}\r\n        />\r\n      </svg>\r\n    );\r\n\r\n    const favoriteTagged = () => (\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width={width}\r\n        height={height}\r\n        viewBox=\"0 0 24 24\"\r\n        data-testid=\"w_current_svg_favorites\"\r\n        className=\"isFavorite\"\r\n      >\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n        <path\r\n          d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\r\n          fill={fill}\r\n        />\r\n      </svg>\r\n    );\r\n\r\n    return this.props.isFavorite === true ? favoriteTagged() : favorite();\r\n  }\r\n}\r\n","export const ADD_LOCATION_TO_FAVORITES = 'ADD_LOCATION_TO_FAVORITES';\r\nexport const REMOVE_LOCATION_FROM_FAVORITES = 'REMOVE_LOCATION_FROM_FAVORITES';\r\n\r\nexport function addLocationToFavorites(location) {\r\n  return function (dispatch) {\r\n    dispatch({\r\n      type: ADD_LOCATION_TO_FAVORITES,\r\n      payload: location,\r\n    });\r\n  };\r\n}\r\n\r\nexport function removeLocationFromFavorites(location) {\r\n  console.log('removing...');\r\n  console.dir(location);\r\n  return function (dispatch) {\r\n    dispatch({\r\n      type: REMOVE_LOCATION_FROM_FAVORITES,\r\n      payload: location,\r\n    });\r\n  };\r\n}\r\n","export function favIndex(favorites, location) {\r\n  return favorites.findIndex((loc) => loc.name === location.name\r\n    && loc.country === location.country\r\n    && loc.region === location.region);\r\n}\r\n","import React from 'react';\r\nimport HourlyForecast from './CurrentHourly';\r\nimport './CurrentWeather.css';\r\nimport format from 'date-fns/format';\r\nimport addSeconds from 'date-fns/addSeconds';\r\nimport { parseISO } from 'date-fns';\r\nimport windIcon from '../../assets/svg/wind.svg';\r\nimport humidityIcon from '../../assets/svg/humidity.svg';\r\nimport pressureIcon from '../../assets/svg/pressure_light.svg';\r\nimport FavoriteIcon from '../Icons/FavoriteIcon';\r\nimport IconUpdate from '../../assets/icons/update.svg';\r\nimport MapConditions from '../../Containers/CurrentWeather/MapConditionsToIcons';\r\nimport { addLocationToFavorites } from '../../Actions/FaviritesActions';\r\nimport { favIndex } from '../../Helpers/helpers';\r\n\r\nclass Current extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isFavorite: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {favorites, location} = this.props;\r\n    this.setState({\r\n      isFavorite: favIndex(favorites, location) !== -1\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const {favorites, location} = this.props;\r\n\r\n    if (prevProps.location !== location) {\r\n      this.setState({\r\n        isFavorite: favIndex(favorites, location) !== -1\r\n      });\r\n    } else {\r\n      const isFavoriteNow = favIndex(favorites, location) !== -1;\r\n\r\n      if (isFavoriteNow !== prevState.isFavorite) {\r\n        this.setState({\r\n          isFavorite: isFavoriteNow\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  addToFav = () => {\r\n    this.props.dispatch(addLocationToFavorites(this.props.location));\r\n  };\r\n\r\n  getLocationDateTime(offsetMin, localDate = new Date()) {\r\n    const addSec = localDate.getTimezoneOffset() * 60 + offsetMin * 60;\r\n    return addSeconds(localDate, addSec);\r\n  }\r\n\r\n  render() {\r\n\r\n    const {localeOptions, location, fact} = this.props;\r\n\r\nconsole.dir(fact)\r\n\r\n    const cond = MapConditions.get(fact.condition);\r\n\r\n    const condition = cond.condition.cs;\r\n\r\n    let dayOfWeek = '-';\r\n    let dateStr = '-';\r\n    let timeStr = '-';\r\n\r\n    if ('dateinfo' in fact) {\r\n\r\n      const localDate = this.getLocationDateTime(fact.dateinfo.offset);\r\n\r\n      dayOfWeek = format(localDate, 'EEEE', localeOptions);\r\n      dateStr = format(localDate, 'dd MMMM yyyy', localeOptions);\r\n      timeStr = format(localDate, 'HH:mm', localeOptions);\r\n    }\r\n\r\n    const processingIconRender = () => {\r\n      if (this.props.processing === true) {\r\n        return (\r\n        <span>\r\n            <img\r\n            id=\"w_current_update_icon\"\r\n            src={IconUpdate}\r\n            alt=\"update icon\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            className=\"processing\"\r\n            data-testid=\"w_current_update_icon\"\r\n            />\r\n          </span>\r\n        );\r\n      }\r\n    };\r\n\r\n    let cardClassName = 'card current-card ' + cond.getClassName(fact.day_part);\r\n    return (\r\n\t\t\t<div\r\n\t\t\t\tclassName={cardClassName}\r\n\t\t\t\tid=\"id_current_weather_layout\"\r\n\t\t\t\tdata-testid=\"w_current_wrapper\"\r\n\t\t\t>\r\n\t\t\t\t<div className=\"card-body card-canvas\">\r\n\t\t\t\t\t<div className=\"d-flex flex-row justify-content-between\">\r\n\t\t\t\t\t\t<div className=\"d-flex flex-row justify-content-start align-items-center\">\r\n\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\tclassName=\"card-title text-white\"\r\n\t\t\t\t\t\t\t\tid=\"w_current_loc_title\"\r\n\t\t\t\t\t\t\t\tdata-testid=\"w_current_loc_title\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{`${location.name}, ${location.country}`}\r\n\t\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tid=\"w_current_add_to_fav_btn\"\r\n\t\t\t\t\t\t\t\tclassName=\"current_favorite_icon mb-2 ml-2\"\r\n\t\t\t\t\t\t\t\tdata-testid=\"w_current_add_to_fav_btn\"\r\n\t\t\t\t\t\t\t\tonClick={this.addToFav}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<FavoriteIcon\r\n\t\t\t\t\t\t\t\t\tisFavorite={this.state.isFavorite}\r\n\t\t\t\t\t\t\t\t\tfill={\"#fcc603\"}\r\n\t\t\t\t\t\t\t\t\twidth=\"24\"\r\n\t\t\t\t\t\t\t\t\theight=\"24\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{processingIconRender()}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<h6\r\n\t\t\t\t\t\tid=\"w_current_today_title\"\r\n\t\t\t\t\t\tclassName=\"card-subtitle mb-2 text-white\"\r\n\t\t\t\t\t\tdata-testid=\"w_current_today_title\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDnes {`${dayOfWeek}, ${dateStr}, ${timeStr}`}\r\n\t\t\t\t\t</h6>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-8\">\r\n\t\t\t\t\t\t\t<div className=\"row mx-0\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tid=\"w_current_fact_temp\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"current_temp text-white\"\r\n\t\t\t\t\t\t\t\t\tdata-testid=\"w_current_fact_temp\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{Math.round(fact.temp)} &#176;С\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<div className=\"current_img ml-3\">\r\n\t\t\t\t\t\t\t\t\t<img src={cond.icon} width=\"48\" height=\"48\" alt=\"\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-4\">\r\n\t\t\t\t\t\t\t<div className=\"row mx-0 d-flex flex-column justify-content-center mt-2\">\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tid=\"w_current_condition\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"text-white\"\r\n\t\t\t\t\t\t\t\t\tdata-testid=\"w_current_condition\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{condition}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\tid=\"w_current_feels_like\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"text-white\"\r\n\t\t\t\t\t\t\t\t\tdata-testid=\"w_current_feels_like\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tPocitově {fact.feels_like}&#176;С\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"d-flex flex-row justify-content-between mt-2 addInfo\">\r\n\t\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center align-items-center mr-2\">\r\n\t\t\t\t\t\t\t<span className=\"text-white\">Vítr</span>\r\n\t\t\t\t\t\t\t<img src={windIcon} width=\"24\" height=\"24\" alt=\"\" />\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tid=\"w_current_wind_speed\"\r\n\t\t\t\t\t\t\t\tclassName=\"text-white ml-1\"\r\n\t\t\t\t\t\t\t\tdata-testid=\"w_current_wind_speed\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{fact.wind_speed} m/sec\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center align-items-center mr-2\">\r\n\t\t\t\t\t\t\t<span className=\"text-white\">Vlhkost</span>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={humidityIcon}\r\n\t\t\t\t\t\t\t\twidth=\"24\"\r\n\t\t\t\t\t\t\t\theight=\"24\"\r\n\t\t\t\t\t\t\t\talt=\"humidity icon\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tid=\"w_current_humidity\"\r\n\t\t\t\t\t\t\t\tclassName=\"text-white ml-1\"\r\n\t\t\t\t\t\t\t\tdata-testid=\"w_current_humidity\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{fact.humidity} %\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center align-items-center mr-2\">\r\n\t\t\t\t\t\t\t<span className=\"text-white\">Tlak</span>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={pressureIcon}\r\n\t\t\t\t\t\t\t\twidth=\"24\"\r\n\t\t\t\t\t\t\t\theight=\"24\"\r\n\t\t\t\t\t\t\t\talt=\"pressure icon\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tid=\"w_current_pressure_mm\"\r\n\t\t\t\t\t\t\t\tclassName=\"text-white ml-1\"\r\n\t\t\t\t\t\t\t\tdata-testid=\"w_current_pressure_mm\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{fact.pressure_mm} mm\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"\">\r\n            <HourlyForecast hourly={fact.hourly} />\r\n          </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n  }\r\n}\r\n\r\nexport default Current;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\r\nimport timeStringType from '../../PropTypes/TimeStringType';\r\nimport SunIcon from '../../assets/icons/sun.svg';\r\nimport MoonIcon from '../../assets/icons/moon.svg';\r\nimport './DayDuration.css';\r\n\r\nfunction getIcon(polarNight = false) {\r\n  if (polarNight === false) {\r\n    return (<img src={SunIcon} alt=\"sun icon\" width={68} height={68} />);\r\n  }\r\n  return (<img src={MoonIcon} alt=\"sun icon\" width={68} height={68} />);\r\n}\r\n\r\nfunction cardBody(durationTemplate, sunrise, sunset) {\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column ml-1\">\r\n      <h6 className=\"card-title\">{durationTemplate}</h6>\r\n      <span className=\"card-text\">{`Východ slunce - ${sunrise}`}</span>\r\n      <span className=\"card-text\">{`Západ slunce - ${sunset}`}</span>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nfunction DayDuration({ fact }) {\r\n \r\n  const { sunrise_hh_mm: sunrise, sunset_hh_mm: sunset, day_duration } = fact;\r\n  \r\n  const polarNight = false;\r\n  let durationTemplate = '';\r\n  let className = 'card duration-card w-100 mt-3 mb-3 py-1';\r\n  if (polarNight === false) {\r\n    className += ' day';\r\n    const sunriseParts = sunrise.split(':');\r\n    const sunsetParts = sunset.split(':');\r\n\r\n    const diffMin = differenceInMinutes(\r\n      new Date(2020, 1, 1, parseInt(sunsetParts[0], 10), parseInt(sunsetParts[1], 10)),\r\n      new Date(2020, 1, 1, parseInt(sunriseParts[0], 10), parseInt(sunriseParts[1], 10))\r\n    );\r\n    const hours = day_duration.h;\r\n    const min = day_duration.m;\r\n\r\n    durationTemplate = `Délka dne: ${hours} h ${min} min`;\r\n  } else {\r\n    className += ' night';\r\n    durationTemplate = 'Polární noc';\r\n  }\r\n\r\n  return (\r\n\t\t<div className={className}>\r\n\t\t\t<div className=\"row mx-0 d-flex flex-row\">\r\n\t\t\t\t<div className=\"d-flex justify-content-center align-items-center mx-2\">\r\n\t\t\t\t\t{getIcon(polarNight)}\r\n\t\t\t\t</div>\r\n\t\t\t\t{cardBody(durationTemplate, sunrise, sunset)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nDayDuration.propTypes = {\r\n  fcSelectedDay: PropTypes.shape({\r\n    sunrise: timeStringType.isRequired,\r\n    sunset: timeStringType.isRequired,\r\n    polar: PropTypes.string,\r\n  }).isRequired,\r\n};\r\nexport default DayDuration;\r\n","import React from 'react';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport CurrentCard from '../../Components/CurrentWeather/Current';\r\nimport DayDurationCard from '../../Components/CurrentDayDuration/DayDuration';\r\n\r\nfunction Duration(fact) {\r\n  if ('sunrise_hh_mm' in fact) {\r\n\t\treturn <DayDurationCard fact={fact} />;\r\n\t}\r\n  return '';\r\n}\r\n\r\nfunction CurrentContainer({\r\n  localeOptions,\r\n  location,\r\n  info,\r\n  favorites,\r\n  fcSelectedDay,\r\n  processing,\r\n  dispatch,\r\n}) {\r\n  \r\n  const current = useSelector((state) => state.weather.fact);\r\n  console.dir(current);\r\n  return (\r\n\t\t<div>\r\n\t\t\t<div className=\"row mx-0\">\r\n\t\t\t\t<CurrentCard\r\n\t\t\t\t\tlocaleOptions={localeOptions}\r\n\t\t\t\t\tlocation={location}\r\n\t\t\t\t\tinfo={info}\r\n\t\t\t\t\tfact={current}\r\n\t\t\t\t\tfavorites={favorites}\r\n\t\t\t\t\tprocessing={processing}\r\n\t\t\t\t\tdispatch={dispatch}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row mx-0\">{Duration(current)}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  localeOptions: state.weather.localeOptions,\r\n  location: state.weather.location,\r\n  info: state.weather.info,\r\n  processing: state.weather.processing,\r\n  favorites: state.favorites.all,\r\n  fcSelectedDay: state.weather.fcSelected,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(CurrentContainer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport format from 'date-fns/format';\r\nimport parse from 'date-fns/parse';\r\nimport { fromUnixTime } from 'date-fns'\r\nimport localeCZ from 'date-fns/locale/cs';\r\nimport MapConditions from '../../Containers/CurrentWeather/MapConditionsToIcons';\r\nimport WindIcon from '../Icons/WindIcon';\r\nimport HumidityIcon from '../Icons/HumidityIcon';\r\nimport PressureIcon from '../Icons/PressureIcon';\r\nimport humidityIcon from '../../assets/svg/humidity.svg';\r\nimport pressureIcon from '../../assets/svg/pressure_light.svg';\r\nimport './forecast.css';\r\n\r\nfunction PartOfDayForecast(props) {\r\n  const { weather } = props;\r\n  const { title, data } = weather;\r\n\r\n  return (\r\n    <div className=\"col-3\">\r\n      <div className=\"d-flex flex-column justify-content-start align-items-center\">\r\n        <span>{ title }</span>\r\n        <span>{ Math.round(data.temp) } &#176;С</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ForecastDay({ forecast }) {\r\n\r\n\tconst options = {\r\n\t\tlocale: localeCZ,\r\n\t};\r\n\r\n\tconst weatherParts = {\r\n\t\tmorning: { title: \"Ráno\", data: forecast.morning },\r\n\t\tday: { title: \"Den\", data: forecast.day },\r\n\t\tevening: { title: \"Večer\", data: forecast.evening },\r\n\t\tnight: { title: \"Noc\", data: forecast.night },\r\n\t};\r\n\r\n\tconst fcDate = fromUnixTime(forecast.dt);\r\n\r\n\tlet dayOfWeek = format(fcDate, \"EE\", options);\r\n\tdayOfWeek = dayOfWeek.charAt(0).toUpperCase() + dayOfWeek.slice(1);\r\n\r\n\tconst dayFormated = format(fcDate, \"dd.MM\", options);\r\n\tconst cond = MapConditions.get(forecast.condition);\r\n\r\n\tconst condition = cond.condition.cs;\r\n\r\n\tconst parts = [];\r\n\r\n\tObject.keys(weatherParts).forEach((key) => {\r\n\t\tparts.push(<PartOfDayForecast key={key} weather={weatherParts[key]} />);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"forecast_day_wrapper\">\r\n\t\t\t<div className=\"mb-1 w-100\">\r\n\t\t\t\t<span className=\"fc_day_part__title\">{`${dayOfWeek}, ${dayFormated}`}</span>\r\n\t\t\t\t<div className=\"d-flex flex-column justify-content-center align-items-center mt-4\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<img src={cond.icon} width=\"48\" height=\"48\" alt=\"\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span>{condition}</span>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tid=\"w_current_fact_temp\"\r\n\t\t\t\t\t\tclassName=\"fc_temp_day\"\r\n\t\t\t\t\t\tdata-testid=\"w_current_fact_temp\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Math.round(forecast.temp_max)} &#176;С\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tid=\"w_current_fact_temp\"\r\n\t\t\t\t\t\tclassName=\"fc_temp_night\"\r\n\t\t\t\t\t\tdata-testid=\"w_current_fact_temp\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{Math.round(forecast.temp_min)} &#176;С\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<div className=\"day_info\">\r\n\t\t\t\t\t\t<div className=\"day_info_row\">\r\n\t\t\t\t\t\t\t<span className=\"fc_info_title\">Vítr</span>\r\n\t\t\t\t\t\t\t<span className=\"fc_info_value\">{forecast.wind_speed} m/sec</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"day_info_row\">\r\n\t\t\t\t\t\t\t<span className=\"fc_info_title\">Vlhkost</span>\r\n\t\t\t\t\t\t\t<span className=\"fc_info_value\">{forecast.humidity}%</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"day_info_row\">\r\n\t\t\t\t\t\t\t<span className=\"fc_info_title\">Tlak</span>\r\n\t\t\t\t\t\t\t<span className=\"fc_info_value\">{forecast.pressure_mm}%</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"day_info_row\">\r\n\t\t\t\t\t\t\t<span className=\"fc_info_title\">Uvi</span>\r\n\t\t\t\t\t\t\t<span className=\"fc_info_value\">{forecast.uvi}%</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ForecastDay;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ForecastDay from './ForecastDay';\r\nimport HorizontalScroll from \"react-scroll-horizontal\";\r\nimport './forecast.css';\r\n\r\nfunction Forecast(props) {\r\n  const { forecasts } = props;\r\n  \r\n  const forecastList = forecasts.map((item) => {\r\n    return (\r\n      <ForecastDay forecast={item} />\r\n    );\r\n  });\r\n  return (\r\n\t\t<div data-testid=\"fc_card_wrapper\" className=\"forecast_wrapper ml-2\">\r\n\t\t\t<h5 className=\"card-title ml-2\">Předpověď na 7 dny</h5>\r\n\t\t\t<div style={{ height: `22.7em` }}>\r\n\t\t\t\t<HorizontalScroll>{forecastList}</HorizontalScroll>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nForecast.propTypes = {\r\n  forecasts: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  forecasts: state.weather.forecasts,\r\n});\r\nexport default connect(mapStateToProps)(Forecast);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CurrentWeather from './CurrentWeather/CurrentContainer';\r\nimport Forecast from '../Components/Forecast/Forecast';\r\n\r\nfunction loadingStub() {\r\n  return (\r\n    <div className=\"alert alert-primary\" role=\"alert\">\r\n      Data se načítají...\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction WeatherLayout(props) {\r\n  const { location } = props;\r\n\r\n  if (!location) return loadingStub();\r\n  return (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row mt-2\">\r\n\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-6\">\r\n\t\t\t\t\t<CurrentWeather />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-6 mt-2 mt-md-0\">\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row mt-2\">\r\n\t\t\t\t<Forecast />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  location: state.weather.location,\r\n  info: state.weather.info\r\n});\r\n\r\nexport default connect(mapStateToProps)(WeatherLayout);\r\n","import React from 'react';\r\n\r\nfunction Question(props) {\r\n  const {\r\n    showModal, qParams, onYes, onCancel,\r\n  } = props;\r\n\r\n\r\n  const modalClassName = showModal === true ? 'modal bd-example-modal-sm' : 'modal fade bd-example-modal-sm';\r\n\r\n  const style = {};\r\n\r\n  if (showModal === true) {\r\n    style.display = 'block';\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={modalClassName}\r\n      style={style}\r\n      id=\"staticBackdrop\"\r\n      data-backdrop=\"static\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"staticBackdropLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-centered modal-sm\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-body\">\r\n            { qParams.text }\r\n          </div>\r\n          <div className=\"modal-footer py-0\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-success\"\r\n              onClick={onYes}\r\n            >\r\n            Ano\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn\"\r\n              onClick={onCancel}\r\n            >\r\n            Zrušení\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './favorites.css';\r\nimport Question from '../Modal/Question';\r\nimport { removeLocationFromFavorites } from '../../Actions/FaviritesActions';\r\nimport { setCurrentLocation, setForecasts } from '../../Actions/LocationAction';\r\n\r\nfunction Favorites(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [qParams, setQParams] = useState({ text: '', subj: null });\r\n  const { favorites, dispatch } = props;\r\n\r\n  const startDialogRemove = (e, location) => {\r\n\r\n    e.stopPropagation();\r\n\r\n    const q = `Do you want to remove ${location.name} from favorites?`;\r\n\r\n    setQParams({\r\n      text: q,\r\n      subj: location,\r\n    });\r\n\r\n    setShow(true);\r\n  };\r\n\r\n  const destroyDialogRemove = () => {\r\n    setQParams({\r\n      text: '',\r\n      subj: null,\r\n    });\r\n\r\n    setShow(false);\r\n  };\r\n\r\n  const removeOnYes = () => {\r\n    dispatch(removeLocationFromFavorites(qParams.subj));\r\n    destroyDialogRemove();\r\n  };\r\n\r\n  const removeOnCancel = () => {\r\n    destroyDialogRemove();\r\n  };\r\n\r\n  const itemOnClick = (item) => {\r\n    props.dispatch(setCurrentLocation(item));\r\n    props.dispatch(setForecasts(item));\r\n    // eslint-disable-next-line react/prop-types\r\n    props.history.push('/');\r\n  };\r\n\r\n  let cnt = 0;\r\n  const items = favorites.map((location) => {\r\n    cnt += 1;\r\n    return (\r\n      <div\r\n        className=\"card favorites_item\"\r\n        key={`fav_item_${cnt}`}\r\n        onClick={() => itemOnClick(location)}\r\n      >\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"mr-2 close\"\r\n            onClick={(e) => startDialogRemove(e, location)}\r\n          >\r\n            <span className=\"text-white\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"card-body pt-0\">\r\n          <h5 className=\"card-title text-white\">{ location.name }</h5>\r\n          <h6 className=\"card-subtitle mb-2 text-white\">\r\n            { `${location.country}, ${location.region}` }\r\n          </h6>\r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  });\r\n\r\n  let warningNoFavorites = null;\r\n\r\n  if (favorites.length === 0) {\r\n    warningNoFavorites = (\r\n      <div className=\"alert alert-warning\" role=\"alert\">\r\n        Jejda, zdá se, že nemáte vybraná místa!\r\n        <Link to=\"/\">Přejděte na domovskou stránku</Link>\r\n        a zjistěte předpověď počasí ve vašem oblíbeném městě!\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-2 h-100\">\r\n      { warningNoFavorites }\r\n      <div className=\"favorites_row\">\r\n        { items }\r\n      </div>\r\n      <Question\r\n        showModal={show === true}\r\n        qParams={qParams}\r\n        onCancel={() => removeOnCancel()}\r\n        onYes={() => removeOnYes()}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nFavorites.propTypes = {\r\n  favorites: PropTypes.array,\r\n  dispatch: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    favorites: state.favorites.all,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(Favorites));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport LocationType from './PropTypes/LocationType';\r\nimport { setCurrentLocationByIP } from './Actions/LocationAction';\r\nimport NavBar from './Components/NavBar/NavBar';\r\nimport WeatherLayout from './Containers/WeatherLayout';\r\nimport Favorites from './Components/Favorites/Favorites';\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    // after start application, if location is not defined yet\r\n    // try to get location by ip address\r\n    const { location, dispatch } = this.props;\r\n    if (!location) {\r\n      dispatch(setCurrentLocationByIP());\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid app-container px-0\">\r\n        <Router>\r\n          <NavBar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={WeatherLayout} />\r\n            <Route path=\"/favorites\" component={Favorites} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  dispatch: PropTypes.func.isRequired,\r\n  location: PropTypes.shape(LocationType),\r\n};\r\n\r\nApp.defaultProps = {\r\n  location: null,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  location: state.weather.location,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n// [::1] is the IPv6 localhost address.\r\n|| window.location.hostname === '[::1]'\r\n// 127.0.0.0/8 are considered localhost for IPv4.\r\n|| window.location.hostname.match(\r\n  /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        // eslint-disable-next-line no-use-before-define\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // eslint-disable-next-line no-console\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n          + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        // eslint-disable-next-line no-use-before-define\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n            // At this point, the updated precached content has been fetched,\r\n            // but the previous service worker will still serve the older\r\n            // content until all client tabs are closed.\r\n              // eslint-disable-next-line no-console\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n            + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n            // At this point, everything has been precached.\r\n            // It's the perfect time to display a\r\n            // \"Content is cached for offline use.\" message.\r\n              // eslint-disable-next-line no-console\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      // eslint-disable-next-line no-console\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n    // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n    || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n      // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n      // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      // eslint-disable-next-line no-console\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import localeCZ from 'date-fns/locale/cs';\r\n\r\nexport default {\r\n  coordinates: {\r\n    lat: null,\r\n    lon: null,\r\n  },\r\n  localeOptions: {\r\n    locale: localeCZ,\r\n  },\r\n  processing: false,\r\n  locationList: [],\r\n  location: null,\r\n  info: null,\r\n  fact: {\r\n    temp: -0,\r\n    feels_like: -0,\r\n    condition: 'cloudy',\r\n    wind_speed: -1,\r\n    pressure_mm: 0,\r\n    humidity: 0,\r\n    hourly: [],\r\n  },\r\n  current: null,\r\n  forecasts: [],\r\n  fcSelected: null,\r\n};\r\n","import {\r\n  PROCESSING_REQUEST,\r\n  START_REQUEST_LOCATIONS,\r\n  REQUEST_LOCATIONS_SUCCESS,\r\n  REQUEST_LOCATIONS_FAILED,\r\n  SET_COORDINATES,\r\n  SET_LOCATION,\r\n  SET_FORECAST_INFO,\r\n} from '../Actions/LocationAction';\r\n\r\nimport initialState from './InitialStates/weather';\r\n\r\nconst weather = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PROCESSING_REQUEST:\r\n      return { ...state, processing: true };\r\n    case START_REQUEST_LOCATIONS:\r\n      return state;\r\n    case REQUEST_LOCATIONS_SUCCESS:\r\n      return { ...state, locationList: action.payload };\r\n    case REQUEST_LOCATIONS_FAILED:\r\n      return state;\r\n    case SET_LOCATION:\r\n      return { ...state, location: action.payload };\r\n    case SET_COORDINATES:\r\n      return { ...state, coordinates: action.payload };\r\n    case SET_FORECAST_INFO:\r\n    console.dir(\"print drom reducer SET_FORECAST_INFO\");\r\n    console.dir(action.payload);  \r\n    return {\r\n        ...state,\r\n        processing: false,\r\n        info: action.payload.info,\r\n        fact: action.payload.current,\r\n        forecasts: [...action.payload.daily],\r\n        // fcSelected: action.payload.forecasts[0],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default weather;\r\n","import {\r\n  ADD_LOCATION_TO_FAVORITES,\r\n  REMOVE_LOCATION_FROM_FAVORITES,\r\n} from '../Actions/FaviritesActions';\r\n\r\nimport { favIndex } from '../Helpers/helpers';\r\n\r\n//import initialState from './InitialStates/favorites';\r\nconst initialState = {\r\n  all: [],\r\n};\r\nexport default function favorites(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_LOCATION_TO_FAVORITES:\r\n      if (favIndex(state.all, action.payload) === -1) {\r\n        return {\r\n          ...state,\r\n          all: [...state.all, action.payload],\r\n        };\r\n      }\r\n      return state;\r\n    case REMOVE_LOCATION_FROM_FAVORITES:\r\n      const ind = favIndex(state.all, action.payload);\r\n      return ind === -1\r\n        ? this.state\r\n        : { all: [...state.all.slice(0, ind), ...state.all.slice(ind + 1)] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport weather from './WeatherReducer';\r\nimport favorites from './FavoritesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  weather,\r\n  favorites,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport './index.css';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport rootReducer from './Reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk),\r\n);\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/overcast-and-snow.b3673467.svg\";","module.exports = __webpack_public_path__ + \"static/media/humidity.55d1c59d.svg\";","module.exports = __webpack_public_path__ + \"static/media/pressure_light.20964ed5.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-and-light-rain.418c454c.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-and-rain.075febfd.svg\";","module.exports = __webpack_public_path__ + \"static/media/overcast-and-rain.ef559ac7.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-and-light-snow.29c5f202.svg\";","module.exports = __webpack_public_path__ + \"static/media/bookmark.eb2c4a38.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear.346b346f.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy.e9ee5d2d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.7ee70f9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/overcast.bd652b9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/overcast-thunderstorms-with-rain.f50dfdb7.svg\";","module.exports = __webpack_public_path__ + \"static/media/overcast-and-wet-snow.9d8867ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/haze.6c4a03a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/tornado.d82015ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.51bb01ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/update.8d36acbb.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.dd42591b.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.5039864c.svg\";"],"sourceRoot":""}